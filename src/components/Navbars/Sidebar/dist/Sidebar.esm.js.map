{"version":3,"file":"Sidebar.esm.js","sources":["../src/Sidebar.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <sidebar-container\r\n    :flavor=\"flavor\"\r\n    :top-offset=\"topOffset\"\r\n    :bottom-offset=\"bottomOffset\"\r\n    id=\"sidebar\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :breakpoint=\"breakpoint\"\r\n    ref=\"sidebar\"\r\n  >\r\n    <sidebar-title :flavor=\"flavor\">\r\n      <text-content :size=\"16\">{{ sidebarTitle }}</text-content>\r\n      <sidebar-hamburger-container :width=\"width\" :breakpoint=\"breakpoint\">\r\n        <n-button :flavor=\"flavor\" @click=\"toggleAccordion\">&#9776;</n-button>\r\n      </sidebar-hamburger-container>\r\n    </sidebar-title>\r\n    <sidebar-content\r\n      :flavor=\"flavor\"\r\n      :width=\"width\"\r\n      :breakpoint=\"breakpoint\"\r\n      ref=\"content\"\r\n    >\r\n      <sidebar-item-list>\r\n        <sidebar-item\r\n          v-for=\"(item, index) in items\"\r\n          :key=\"'item' + index\"\r\n          :flavor=\"flavor\"\r\n          :disabled=\"item.disabled\"\r\n          :active=\"item.active\"\r\n        >\r\n          <a v-if=\"item.type == 'item'\" :href=\"item.url\">\r\n            <div class=\"sidebar-icon\" v-html=\"item.icon\"></div>\r\n            <text-content :size=\"13\">{{ item.text }}</text-content>\r\n          </a>\r\n          <div v-else>\r\n            <vue-sidebar-dropdown\r\n              :icon=\"item.icon\"\r\n              :text=\"item.text\"\r\n              :disabled=\"item.disabled\"\r\n              :items=\"item.items\"\r\n              :flavor=\"flavor\"\r\n            ></vue-sidebar-dropdown>\r\n          </div>\r\n        </sidebar-item>\r\n      </sidebar-item-list>\r\n    </sidebar-content>\r\n  </sidebar-container>\r\n</template>\r\n<script>\r\nimport styled from \"vue-styled-components\";\r\nimport Theme from \"@IntusFacultas/design-system\";\r\nimport { TextContent, NLabel } from \"@IntusFacultas/typography\";\r\nimport { NButton } from \"@IntusFacultas/button\";\r\nconst props = {\r\n  flavor: String,\r\n  disabled: Boolean,\r\n  active: Boolean,\r\n  raw: Boolean,\r\n  width: {\r\n    type: Number,\r\n    default: 200,\r\n  },\r\n  height: {\r\n    type: Number,\r\n    default: null,\r\n  },\r\n  breakpoint: {\r\n    type: Number,\r\n    default: 576,\r\n  },\r\n  topOffset: {\r\n    type: String,\r\n    default: \"0px\",\r\n  },\r\n  bottomOffset: {\r\n    type: String,\r\n    default: \"0px\",\r\n  },\r\n  defaultTheme: {\r\n    type: Object,\r\n    default: function() {\r\n      return Theme;\r\n    },\r\n  },\r\n};\r\nexport const SidebarHamburgerContainer = styled(\"div\", props)`\r\n  display: none;\r\n  @media (max-width: ${(props) => props.breakpoint}px) {\r\n    display: block;\r\n  }\r\n`;\r\nexport const SidebarContainer = styled(\"aside\", props)`\r\n  background-color: ${(props) =>\r\n    props.theme && props.theme[props.flavor]\r\n      ? props.theme[props.flavor].background.color\r\n      : props.defaultTheme[props.flavor]\r\n      ? props.defaultTheme[props.flavor].background.color\r\n      : \"#f2f2f2\"};\r\n  width: ${(props) => props.width}px;\r\n  z-index: 1;\r\n  overflow-y: auto;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: ${(props) => props.topOffset};\r\n  bottom: ${(props) => props.bottomOffset};\r\n  ${(props) => (!isNaN(props.height) ? `height: ${props.height}px` : ``)}\r\n  @media (max-width: ${(props) => props.breakpoint}px) {\r\n    position: relative;\r\n    width: 100%;\r\n    padding-left: auto;\r\n    top: initial;\r\n    height: initial\r\n  }\r\n  & * {\r\n    webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\r\n  }\r\n`;\r\nexport const SidebarTitle = styled(\"div\", props)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 15px;\r\n  & * {\r\n    color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].color.color\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].color.color\r\n        : \"#222\"};};\r\n  }\r\n`;\r\nexport const SidebarContent = styled(\"div\", props)`\r\n  overflow: hidden;\r\n  transition: height 0.3s ease-out;\r\n\r\n  @media (min-width: ${(props) => props.breakpoint + 1}px) {\r\n    height: auto !important;\r\n    padding: 5px 0px !important;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.raw\r\n      ? \"\"\r\n      : `\r\n    & * {\r\n      color: ${\r\n        props.theme && props.theme[props.flavor]\r\n          ? props.theme[props.flavor].color.color\r\n          : props.defaultTheme[props.flavor]\r\n          ? props.defaultTheme[props.flavor].color.color\r\n          : \"#222\"\r\n      };!important };\r\n    }\r\n  \r\n  `}\r\n`;\r\nexport const SidebarItemList = styled.ul`\r\n  list-style: none;\r\n  margin-top: 0px;\r\n  padding: 0px;\r\n  margin-bottom: 0px;\r\n`;\r\nexport const SidebarItem = styled(\"li\", props)`\r\n  padding: 10px 20px;\r\n  & a {\r\n    text-decoration: none;\r\n  }\r\n  & * {\r\n    color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].color.color\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].color.color\r\n        : \"#222\"};\r\n  }\r\n  ${(props) =>\r\n    props.disabled\r\n      ? `\r\n    pointer-events: none;\r\n    & * {color: rgba(0, 0, 0, 0.3) !important;}`\r\n      : \"\"};\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n  background-color: ${\r\n    props.theme && props.theme[props.flavor]\r\n      ? props.theme[props.flavor].background.focus\r\n      : props.defaultTheme[props.flavor]\r\n      ? props.defaultTheme[props.flavor].background.focus\r\n      : \"#d7d7d7\"\r\n  };\r\n  `\r\n      : \"\"}\r\n  &:hover {\r\n  background-color: ${(props) =>\r\n    props.theme && props.theme[props.flavor]\r\n      ? props.theme[props.flavor].background.hover\r\n      : props.defaultTheme[props.flavor]\r\n      ? props.defaultTheme[props.flavor].background.hover\r\n      : \"#d7d7d7\"};};\r\n  }\r\n`;\r\nconst SidebarDropdown = styled(\"ul\", props)`\r\n  list-style: none;\r\n  margin-top: 0px;\r\n  padding: 0px;\r\n  margin-bottom: 0px;\r\n  transition: 0.3s max-height;\r\n  max-height: 0px;\r\n  overflow-y: hidden;\r\n`;\r\nconst SidebarDropdownCarat = styled(\"div\", props)`\r\n  background-image: linear-gradient(\r\n    to top right,\r\n    transparent 50%,\r\n    ${(props) =>\r\n        props.disabled\r\n          ? \"rgba(0, 0, 0, 0.3)\"\r\n          : props.theme && props.theme[props.flavor]\r\n          ? props.theme[props.flavor].color.color\r\n          : props.defaultTheme[props.flavor]\r\n          ? props.defaultTheme[props.flavor].color.color\r\n          : \"#222\"}\r\n      50%\r\n  );\r\n  width: 0.5rem;\r\n  height: 0.5rem;\r\n  margin-bottom: 1px;\r\n  transform: rotate(45deg);\r\n  transition: 0.3s all;\r\n  display: inline-block;\r\n`;\r\nexport const VueSidebarDropdown = {\r\n  components: {\r\n    SidebarDropdown,\r\n    SidebarDropdownCarat,\r\n    NLabel,\r\n    SidebarItem,\r\n    TextContent,\r\n  },\r\n  data() {\r\n    return {\r\n      toggled: false,\r\n    };\r\n  },\r\n  props: {\r\n    icon: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    text: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    items: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  computed: {\r\n    uid() {\r\n      return this._uid;\r\n    },\r\n    computeDropdownClass() {\r\n      if (this.toggled) {\r\n        return [\"sidebar-open-carat\"];\r\n      }\r\n      return [];\r\n    },\r\n  },\r\n  methods: {\r\n    toggleDropdown() {\r\n      this.toggled = !this.toggled;\r\n    },\r\n  },\r\n  template: `\r\n    <div>\r\n      <div class=\"sidebar-icon\" v-html=\"icon\"></div>\r\n      <n-label\r\n        class=\"dropdown-label\"\r\n        :for=\"'sidebar-dropdown' + uid\"\r\n        role=\"button\"\r\n        @click=\"toggleDropdown\"\r\n        @keyup.space=\"toggleDropdown\"\r\n        @keyup.enter=\"toggleDropdown\"\r\n        tabindex=\"0\"\r\n      >\r\n        {{text}}\r\n        <sidebar-dropdown-carat\r\n          :disabled=\"disabled\"\r\n          :flavor=\"flavor\"\r\n          :class=\"computeDropdownClass\"\r\n        ></sidebar-dropdown-carat>\r\n      </n-label>\r\n      <sidebar-dropdown\r\n        :style=\"{'max-height': toggled ? (items.length * 40) + 'px' : '0px'}\"\r\n        :tabindex=\"-1\"\r\n      >\r\n        <sidebar-item\r\n          v-for=\"(option, optionIndex) in items\"\r\n          :key=\"'dropdown' + uid + 'option' + optionIndex\"\r\n          :flavor=\"flavor\"\r\n          :disabled=\"option.disabled\"\r\n          :active=\"option.active\"\r\n          :tabindex=\"-1\"\r\n        >\r\n          <a :href=\"option.url\" :tabindex=\"toggled ? 0 : -1\">\r\n            <div class=\"sidebar-icon\" v-html=\"option.icon\"></div>\r\n            <text-content :size=\"13\">{{option.text}}</text-content>\r\n          </a>\r\n        </sidebar-item>\r\n      </sidebar-dropdown>\r\n    </div>\r\n  `,\r\n};\r\n\r\nexport const Sidebar = {\r\n  components: {\r\n    SidebarContainer,\r\n    SidebarHamburgerContainer,\r\n    SidebarTitle,\r\n    SidebarContent,\r\n    SidebarItemList,\r\n    SidebarItem,\r\n    TextContent,\r\n    VueSidebarDropdown,\r\n    NButton,\r\n  },\r\n  data: function() {\r\n    return {\r\n      windowWidth: 0,\r\n      open: true,\r\n    };\r\n  },\r\n  mounted: function() {\r\n    var self = this;\r\n    window.addEventListener(\"click\", self.checkOffclick);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"click\", self.checkOffclick);\r\n  },\r\n  methods: {\r\n    collapseSection(element) {\r\n      // pulled from https://css-tricks.com/using-css-transitions-auto-dimensions/ and modified\r\n      // get the height of the element's inner content, regardless of its actual size\r\n      let sectionHeight = element.scrollHeight;\r\n      // temporarily disable all css transitions\r\n      var elementTransition = element.style.transition;\r\n      element.style.transition = \"\";\r\n      element.style.height = sectionHeight + \"px !important\";\r\n      element.style.padding = \"0px 0px\";\r\n      // on the next frame (as soon as the previous style change has taken effect),\r\n      // explicitly set the element's height to its current pixel height, so we\r\n      // aren't transitioning out of 'auto'\r\n      requestAnimationFrame(function() {\r\n        element.style.height = sectionHeight + \"px\";\r\n        element.style.transition = elementTransition;\r\n        // element.style.overflowY = 'hidden';\r\n\r\n        // on the next frame (as soon as the previous style change has taken effect),\r\n        // have the element transition to height: 0\r\n        requestAnimationFrame(function() {\r\n          element.style.height = 0 + \"px\";\r\n        });\r\n      });\r\n\r\n      // mark the section as \"currently collapsed\"\r\n      element.setAttribute(\"data-collapsed\", \"true\");\r\n    },\r\n    expandSection(element) {\r\n      // pulled from https://css-tricks.com/using-css-transitions-auto-dimensions/ and modified\r\n      // get the height of the element's inner content, regardless of its actual size\r\n      let sectionHeight = element.scrollHeight;\r\n      // have the element transition to the height of its inner content\r\n      element.style.height = sectionHeight + \"px\";\r\n      element.style.padding = \"5px 0px\";\r\n\r\n      // element.style.overflowY = \"auto\"\r\n      // when the next css transition finishes (which should be the one we just triggered)\r\n      element.addEventListener(\"transitionend\", function() {\r\n        // remove this event listener so it only gets triggered once\r\n        element.removeEventListener(\"transitionend\", this);\r\n        if (element.getAttribute(\"data-collapsed\") == \"false\") {\r\n          // remove \"height\" from the element's inline styles, so it can return to its initial value\r\n          element.style.height = \"auto\";\r\n        }\r\n      });\r\n\r\n      // mark the section as \"currently not collapsed\"\r\n      element.setAttribute(\"data-collapsed\", \"false\");\r\n    },\r\n    checkOffclick: function($e) {\r\n      /**\r\n       * Pulled from: https://stackoverflow.com/questions/17773852/check-if-div-is-descendant-of-another\r\n       */\r\n      let self = this;\r\n      function isChild(obj, parentObj) {\r\n        if (obj.isEqualNode(parentObj)) return true;\r\n        while ((obj = obj.parentNode)) {\r\n          if (obj.isEqualNode(parentObj)) return true;\r\n        }\r\n        return false;\r\n      }\r\n      if (\r\n        self.open &&\r\n        this.$refs.sidebar &&\r\n        !isChild($e.target, this.$refs.sidebar.$el)\r\n      ) {\r\n        self.open = false;\r\n        self.collapseSection(this.$refs.content.$el);\r\n      }\r\n    },\r\n    toggleAccordion: function() {\r\n      this.open = !this.open;\r\n      if (this.open) {\r\n        this.expandSection(this.$refs.content.$el);\r\n      } else {\r\n        this.collapseSection(this.$refs.content.$el);\r\n      }\r\n    },\r\n    changeWindow: function($e) {\r\n      window.location.href = $e;\r\n    },\r\n  },\r\n  props: {\r\n    sidebarTitle: {\r\n      type: String,\r\n      default: \"Sidebar\",\r\n    },\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    bottomOffset: {\r\n      type: String,\r\n      default: \"0px\",\r\n    },\r\n    topOffset: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n    height: {\r\n      type: [Number, Object],\r\n      default: null,\r\n    },\r\n    breakpoint: {\r\n      type: Number,\r\n      default: 576,\r\n    },\r\n    items: {\r\n      type: Array,\r\n      default: function() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const SidebarOffsetContent = styled(\"div\", props)`\r\n  margin-left: 0px;\r\n  @media (min-width: ${(props) => props.breakpoint}px) {\r\n    margin-left: ${(props) => props.width}px;\r\n    margin-top: 0px;\r\n  }\r\n  padding-left: 15px;\r\n`;\r\nexport default Sidebar;\r\n</script>\r\n\r\n<style>\r\n.sidebar-open-carat {\r\n  transform: rotate(135deg) !important;\r\n  margin-bottom: 4px;\r\n}\r\n.sidebar-icon {\r\n  display: inline-block;\r\n}\r\n.dropdown-arrow {\r\n  background-image: linear-gradient(to top right, transparent 50%, #727272 50%);\r\n  width: 0.5rem;\r\n  height: 0.5rem;\r\n  transform: rotate(135deg);\r\n  transition: 0.3s all;\r\n  display: inline-block;\r\n}\r\n.dropdown-label {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","// Import vue component\r\nimport {\r\n  SidebarHamburgerContainer,\r\n  SidebarContainer,\r\n  SidebarTitle,\r\n  SidebarContent,\r\n  VueSidebarDropdown,\r\n  SidebarItemList,\r\n  Sidebar,\r\n  SidebarOffsetContent,\r\n  SidebarItem,\r\n} from \"./Sidebar.vue\";\r\n\r\nlet components = [\r\n  { label: \"SidebarHamburgerContainer\", component: SidebarHamburgerContainer },\r\n  { label: \"SidebarContainer\", component: SidebarContainer },\r\n  { label: \"SidebarTitle\", component: SidebarTitle },\r\n  { label: \"SidebarContent\", component: SidebarContent },\r\n  { label: \"VueSidebarDropdown\", component: VueSidebarDropdown },\r\n  { label: \"Sidebar\", component: Sidebar },\r\n  { label: \"SidebarItem\", component: SidebarItem },\r\n  { label: \"SidebarItemList\", component: SidebarItemList },\r\n  { label: \"SidebarOffsetContent\", component: SidebarOffsetContent },\r\n];\r\nlet GlobalVue = null;\r\nfor (let component_obj of components) {\r\n  // install function executed by Vue.use()\r\n  const install = function installComponent(Vue) {\r\n    if (install.installed) return;\r\n    install.installed = true;\r\n    Vue.component(component_obj.label, component_obj.component);\r\n  };\r\n\r\n  // Create module definition for Vue.use()\r\n  const plugin = {\r\n    install,\r\n  };\r\n\r\n  // To auto-install when vue is found\r\n  // eslint-disable-next-line no-redeclare\r\n  /* global window, global */\r\n  if (typeof window !== \"undefined\") {\r\n    GlobalVue = window.Vue;\r\n  } else if (typeof global !== \"undefined\") {\r\n    GlobalVue = global.Vue;\r\n  }\r\n  if (GlobalVue) {\r\n    GlobalVue.use(plugin);\r\n  }\r\n\r\n  // Inject install function into component - allows component\r\n  // to be registered via Vue.use() as well as Vue.component()\r\n  component_obj.component.install = install;\r\n}\r\n// Export component by default\r\nexport {\r\n  SidebarHamburgerContainer,\r\n  SidebarContainer,\r\n  SidebarTitle,\r\n  SidebarContent,\r\n  VueSidebarDropdown,\r\n  Sidebar,\r\n  SidebarOffsetContent,\r\n  SidebarItem,\r\n  SidebarItemList,\r\n};\r\nexport default Sidebar;\r\n\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["components","label","component","SidebarHamburgerContainer","SidebarContainer","SidebarTitle","SidebarContent","VueSidebarDropdown","Sidebar","SidebarItem","SidebarItemList","SidebarOffsetContent","GlobalVue","component_obj","install","installComponent","Vue","installed","plugin","window","global","use"],"mappings":"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"}