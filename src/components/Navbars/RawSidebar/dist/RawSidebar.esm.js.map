{"version":3,"file":"RawSidebar.esm.js","sources":["../src/RawSidebar.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <sidebar-container\r\n    :flavor=\"flavor\"\r\n    :top-offset=\"topOffset\"\r\n    :bottom-offset=\"bottomOffset\"\r\n    id=\"sidebar\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :breakpoint=\"breakpoint\"\r\n  >\r\n    <sidebar-title :flavor=\"flavor\">\r\n      <text :size=\"16\">{{ sidebarTitle }}</text>\r\n      <sidebar-hamburger-container :width=\"width\" :breakpoint=\"breakpoint\">\r\n        <n-button :flavor=\"flavor\" @click=\"toggleAccordion\">&#9776;</n-button>\r\n      </sidebar-hamburger-container>\r\n    </sidebar-title>\r\n    <sidebar-content\r\n      :raw=\"true\"\r\n      :flavor=\"flavor\"\r\n      :width=\"width\"\r\n      :breakpoint=\"breakpoint\"\r\n      ref=\"content\"\r\n    >\r\n      <slot></slot>\r\n    </sidebar-content>\r\n  </sidebar-container>\r\n</template>\r\n\r\n<script>\r\nimport { TextContent } from \"@IntusFacultas/typography\";\r\nimport { NButton } from \"@IntusFacultas/button\";\r\nimport {\r\n  SidebarHamburgerContainer,\r\n  SidebarContainer,\r\n  SidebarTitle,\r\n  SidebarContent,\r\n} from \"@IntusFacultas/sidebar\";\r\nexport const RawSidebar = {\r\n  components: {\r\n    SidebarContainer,\r\n    SidebarHamburgerContainer,\r\n    SidebarTitle,\r\n    SidebarContent,\r\n    TextContent,\r\n    NButton,\r\n  },\r\n  data: function() {\r\n    return {\r\n      windowWidth: 0,\r\n      open: true,\r\n    };\r\n  },\r\n  mounted: function() {\r\n    var self = this;\r\n    window.addEventListener(\"click\", self.checkOffclick);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"click\", self.checkOffclick);\r\n  },\r\n  methods: {\r\n    collapseSection(element) {\r\n      // pulled from https://css-tricks.com/using-css-transitions-auto-dimensions/ and modified\r\n      // get the height of the element's inner content, regardless of its actual size\r\n      let sectionHeight = element.scrollHeight;\r\n      // temporarily disable all css transitions\r\n      var elementTransition = element.style.transition;\r\n      element.style.transition = \"\";\r\n      element.style.height = sectionHeight + \"px !important\";\r\n      element.style.padding = \"0px 15px\";\r\n      // on the next frame (as soon as the previous style change has taken effect),\r\n      // explicitly set the element's height to its current pixel height, so we\r\n      // aren't transitioning out of 'auto'\r\n      requestAnimationFrame(function() {\r\n        element.style.height = sectionHeight + \"px\";\r\n        element.style.transition = elementTransition;\r\n        // element.style.overflowY = 'hidden';\r\n\r\n        // on the next frame (as soon as the previous style change has taken effect),\r\n        // have the element transition to height: 0\r\n        requestAnimationFrame(function() {\r\n          element.style.height = 0 + \"px\";\r\n        });\r\n      });\r\n\r\n      // mark the section as \"currently collapsed\"\r\n      element.setAttribute(\"data-collapsed\", \"true\");\r\n    },\r\n    expandSection(element) {\r\n      // pulled from https://css-tricks.com/using-css-transitions-auto-dimensions/ and modified\r\n      // get the height of the element's inner content, regardless of its actual size\r\n      let sectionHeight = element.scrollHeight;\r\n      // have the element transition to the height of its inner content\r\n      element.style.height = sectionHeight + \"px\";\r\n      element.style.padding = \"5px 15px\";\r\n\r\n      // element.style.overflowY = \"auto\"\r\n      // when the next css transition finishes (which should be the one we just triggered)\r\n      element.addEventListener(\"transitionend\", function() {\r\n        // remove this event listener so it only gets triggered once\r\n        element.removeEventListener(\"transitionend\", this);\r\n        if (element.getAttribute(\"data-collapsed\") == \"false\") {\r\n          // remove \"height\" from the element's inline styles, so it can return to its initial value\r\n          element.style.height = \"auto\";\r\n        }\r\n      });\r\n\r\n      // mark the section as \"currently not collapsed\"\r\n      element.setAttribute(\"data-collapsed\", \"false\");\r\n    },\r\n    checkOffclick: function($e) {\r\n      /**\r\n       * Pulled from: https://stackoverflow.com/questions/17773852/check-if-div-is-descendant-of-another\r\n       */\r\n      let self = this;\r\n      function isChild(obj, parentObj) {\r\n        if (obj == null) return true;\r\n        if (obj.id == parentObj.id) return true;\r\n        while ((obj = obj.parentNode)) {\r\n          if (obj.id == parentObj.id) return true;\r\n        }\r\n        return false;\r\n      }\r\n      if (\r\n        self.open &&\r\n        !isChild($e.target, document.getElementById(\"sidebar\"))\r\n      ) {\r\n        self.open = false;\r\n        self.collapseSection(self.$refs.content.$el);\r\n      }\r\n    },\r\n    toggleAccordion: function() {\r\n      this.open = !this.open;\r\n      if (this.open) {\r\n        this.expandSection(this.$refs.content.$el);\r\n      } else {\r\n        this.collapseSection(this.$refs.content.$el);\r\n      }\r\n    },\r\n    changeWindow: function($e) {\r\n      window.location.href = $e;\r\n    },\r\n  },\r\n  computed: {\r\n    computedClass: function() {\r\n      if (this.open) {\r\n        return {};\r\n      }\r\n      return [\"sidebar-closed\"];\r\n    },\r\n  },\r\n  props: {\r\n    sidebarTitle: {\r\n      type: String,\r\n      default: \"Sidebar\",\r\n    },\r\n    height: {\r\n      type: [Number, Object],\r\n      default: null,\r\n    },\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    bottomOffset: {\r\n      type: String,\r\n      default: \"0px\",\r\n    },\r\n    topOffset: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n    breakpoint: {\r\n      type: Number,\r\n      default: 576,\r\n    },\r\n  },\r\n};\r\nexport default RawSidebar;\r\n</script>\r\n\r\n<style>\r\n.sidebar-open-carat {\r\n  transform: rotate(135deg) !important;\r\n  margin-bottom: 4px;\r\n}\r\n.sidebar-icon {\r\n  display: inline-block;\r\n}\r\n.dropdown-arrow {\r\n  background-image: linear-gradient(to top right, transparent 50%, #727272 50%);\r\n  width: 0.5rem;\r\n  height: 0.5rem;\r\n  transform: rotate(135deg);\r\n  transition: 0.3s all;\r\n  display: inline-block;\r\n}\r\n.dropdown-label {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","// Import vue component\r\nimport RawSidebar from \"./RawSidebar.vue\";\r\n\r\n// install function executed by Vue.use()\r\nconst install = function installNModal(Vue) {\r\n  if (install.installed) return;\r\n  install.installed = true;\r\n  Vue.component(\"RawSidebar\", RawSidebar);\r\n};\r\n\r\n// Create module definition for Vue.use()\r\nconst plugin = {\r\n  install,\r\n};\r\n\r\n// To auto-install when vue is found\r\n// eslint-disable-next-line no-redeclare\r\n/* global window, global */\r\nlet GlobalVue = null;\r\nif (typeof window !== \"undefined\") {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== \"undefined\") {\r\n  GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\n// Inject install function into component - allows component\r\n// to be registered via Vue.use() as well as Vue.component()\r\nRawSidebar.install = install;\r\n\r\n// Export component by default\r\nexport default RawSidebar;\r\nexport { RawSidebar };\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["install","installNModal","Vue","installed","component","RawSidebar","plugin","GlobalVue","window","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAGA,IAAMA,OAAO,GAAG,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1C,MAAIF,OAAO,CAACG,SAAZ,EAAuB;AACvBH,EAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,YAAd,EAA4BC,iBAA5B;AACD,CAJD;;;AAOA,IAAMC,MAAM,GAAG;AACbN,EAAAA,OAAO,EAAPA;AADa,CAAf;AAKA;;AACA;;AACA,IAAIO,SAAS,GAAG,IAAhB;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,EAAAA,SAAS,GAAGC,MAAM,CAACN,GAAnB;AACD,CAFD,MAEO,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,EAAAA,SAAS,GAAGE,MAAM,CAACP,GAAnB;AACD;;AACD,IAAIK,SAAJ,EAAe;AACbA,EAAAA,SAAS,CAACG,GAAV,CAAcJ,MAAd;AACD;AAGD;;;AACAD,iBAAU,CAACL,OAAX,GAAqBA,OAArB;AAMA;AACA;;;;;"}