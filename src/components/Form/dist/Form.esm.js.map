{"version":3,"file":"Form.esm.js","sources":["../src/FormInput.vue","../src/RawFormInput.vue","../src/Form.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <div>\r\n    <vue-input\r\n      :flavor=\"computeFlavor('field')\"\r\n      :name=\"name\"\r\n      :input-type=\"inputType\"\r\n      :required=\"required\"\r\n      :label=\"label\"\r\n      :disabled=\"disabled\"\r\n      v-model=\"internalValue\"\r\n      :placeholder=\"placeholder\"\r\n      @change=\"onChange\"\r\n      @input=\"onInput\"\r\n      @keyup=\"$emit('keyup', $event)\"\r\n    ></vue-input>\r\n    <div class=\"form-error-message\">\r\n      <small-text\r\n        :flavor=\"computeFlavor('fieldText')\"\r\n        v-for=\"error in errors\"\r\n        :key=\"`field-error-${error}`\"\r\n        >{{ error }}</small-text\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { SmallText } from \"@IntusFacultas/typography\";\r\nimport { VueInput } from \"@IntusFacultas/input\";\r\nexport const FormInput = {\r\n  components: { SmallText, VueInput },\r\n  tag: \"what\",\r\n  data() {\r\n    return {\r\n      internalValue: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (newVal != this.internalValue) {\r\n        this.internalValue = newVal;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.internalValue = this.value;\r\n  },\r\n  props: {\r\n    name: String,\r\n    inputType: String,\r\n    label: String,\r\n    required: Boolean,\r\n    value: [String, Number],\r\n    placeholder: String,\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    errors: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    computeFlavor(el) {\r\n      if (el.indexOf(\"Text\") != -1) {\r\n        return \"Danger\";\r\n      } else {\r\n        if (this.errors.length > 0) {\r\n          return \"Danger\";\r\n        }\r\n        return \"LightBlue\";\r\n      }\r\n    },\r\n    onChange($e) {\r\n      this.internalValue = $e;\r\n      this.$emit(\"change\", $e);\r\n    },\r\n    onInput($e) {\r\n      this.internalValue = $e;\r\n      this.$emit(\"input\", $e);\r\n    },\r\n  },\r\n};\r\nexport default FormInput;\r\n</script>\r\n\r\n<style>\r\n.form-error-message {\r\n  min-height: 17px;\r\n  min-width: 1px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>\r\n","<template>\r\n  <raw-form-input-container>\r\n    <slot></slot>\r\n    <div class=\"form-error-message\">\r\n      <small-text\r\n        :flavor=\"computeFlavor('fieldText')\"\r\n        v-for=\"(error, index) in errors\"\r\n        :key=\"`field-error-${index}`\"\r\n        >{{ error }}</small-text\r\n      >\r\n    </div>\r\n  </raw-form-input-container>\r\n</template>\r\n<script>\r\nimport styled from \"vue-styled-components\";\r\nimport { SmallText } from \"@IntusFacultas/typography\";\r\nconst RawFormInputContainer = styled.div`\r\n  position: relative;\r\n`;\r\nexport const RawFormInput = {\r\n  components: { SmallText, RawFormInputContainer },\r\n  data() {\r\n    return {\r\n      internalValue: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (newVal != this.internalValue) {\r\n        this.internalValue = newVal;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.internalValue = this.value;\r\n  },\r\n  props: {\r\n    errors: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    computeFlavor() {\r\n      if (this.errors.length > 0) {\r\n        return \"Danger\";\r\n      }\r\n      return \"LightBlue\";\r\n    },\r\n  },\r\n};\r\nexport default RawFormInput;\r\n</script>\r\n\r\n<style>\r\n.form-error-message {\r\n  min-height: 17px;\r\n  min-width: 1px;\r\n}\r\n</style>\r\n","<template>\r\n  <form>\r\n    <div v-for=\"(field, index) in internalFields\" :key=\"`field${index}`\">\r\n      <form-input\r\n        v-if=\"field.type != 'select'\"\r\n        :label=\"field.label\"\r\n        :placeholder=\"field.placeholder\"\r\n        :name=\"field.name\"\r\n        :required=\"field.required\"\r\n        :disabled=\"field.disabled\"\r\n        v-model=\"field.value\"\r\n        :errors=\"internalErrors[field.name]\"\r\n        :input-type=\"field.type\"\r\n        @input=\"validateField(field)\"\r\n        @keyup.enter=\"submitForm(index)\"\r\n      ></form-input>\r\n      <raw-form-input\r\n        :errors=\"internalErrors[field.name]\"\r\n        v-else-if=\"field.type == 'select'\"\r\n      >\r\n        <n-label :for=\"field.name\">{{ field.label }}</n-label>\r\n        <select-me\r\n          :name=\"field.name\"\r\n          :can-be-empty=\"!field.required\"\r\n          :options=\"field.options\"\r\n          v-model=\"field.value\"\r\n          :class=\"{ 'opacity-transparent': !load }\"\r\n          @input=\"validateField(field)\"\r\n        ></select-me>\r\n        <placeholder\r\n          class=\"field-placeholder\"\r\n          height=\"35px\"\r\n          v-if=\"!load\"\r\n        ></placeholder>\r\n      </raw-form-input>\r\n    </div>\r\n    <div class=\"form-bottom-content\" v-if=\"showBottom\">\r\n      <slot></slot>\r\n      <div>\r\n        <n-button\r\n          type=\"button\"\r\n          flavor=\"Warning\"\r\n          @click=\"clearAll\"\r\n          :disabled=\"submitting\"\r\n          v-if=\"!disableClearing\"\r\n          class=\"form-button-spacing\"\r\n          >Clear</n-button\r\n        >\r\n        <n-button\r\n          type=\"button\"\r\n          flavor=\"Primary\"\r\n          @click=\"submit($event)\"\r\n          :loading=\"submitting\"\r\n          :disabled=\"submitting || errorsExist || disableSubmission\"\r\n        >\r\n          <span>Submit&nbsp;</span>\r\n          <svg\r\n            v-if=\"submitting\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"white\"\r\n            class=\"loading-spinner\"\r\n          >\r\n            <path\r\n              d=\"M13.75 22c0 .966-.783 1.75-1.75 1.75s-1.75-.784-1.75-1.75.783-1.75 1.75-1.75 1.75.784 1.75 1.75zm-1.75-22c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm10 10.75c.689 0 1.249.561 1.249 1.25 0 .69-.56 1.25-1.249 1.25-.69 0-1.249-.559-1.249-1.25 0-.689.559-1.25 1.249-1.25zm-22 1.25c0 1.105.896 2 2 2s2-.895 2-2c0-1.104-.896-2-2-2s-2 .896-2 2zm19-8c.551 0 1 .449 1 1 0 .553-.449 1.002-1 1-.551 0-1-.447-1-.998 0-.553.449-1.002 1-1.002zm0 13.5c.828 0 1.5.672 1.5 1.5s-.672 1.501-1.502 1.5c-.826 0-1.498-.671-1.498-1.499 0-.829.672-1.501 1.5-1.501zm-14-14.5c1.104 0 2 .896 2 2s-.896 2-2.001 2c-1.103 0-1.999-.895-1.999-2s.896-2 2-2zm0 14c1.104 0 2 .896 2 2s-.896 2-2.001 2c-1.103 0-1.999-.895-1.999-2s.896-2 2-2z\"\r\n            />\r\n          </svg>\r\n        </n-button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</template>\r\n<script>\r\nimport FormInput from \"./FormInput.vue\";\r\nimport RawFormInput from \"./RawFormInput.vue\";\r\nimport SelectMe from \"@IntusFacultas/select-me\";\r\nimport { NButton } from \"@IntusFacultas/button\";\r\nimport { NLabel } from \"@IntusFacultas/typography\";\r\nimport { Placeholder } from \"@IntusFacultas/placeholder\";\r\nexport const VueForm = {\r\n  components: {\r\n    FormInput,\r\n    NButton,\r\n    SelectMe,\r\n    RawFormInput,\r\n    NLabel,\r\n    Placeholder,\r\n  },\r\n  data() {\r\n    return {\r\n      internalFields: [],\r\n      internalErrors: {},\r\n      load: false,\r\n      errorsExist: false,\r\n      overridenFieldErrors: [],\r\n    };\r\n  },\r\n  props: {\r\n    showBottom: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    submitting: Boolean,\r\n    disableSubmission: Boolean,\r\n    disableClearing: Boolean,\r\n    allowSubmissionOnEnter: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    fields: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    errors: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n  },\r\n  watch: {\r\n    fields() {\r\n      this.internalFields = this.fields.slice();\r\n    },\r\n    errors: {\r\n      handler() {\r\n        // this.internalErrors = Object.assign({}, newVal);\r\n        for (let field of Object.keys(this.errors)) {\r\n          if (this.overridenFieldErrors.indexOf(field) == -1) {\r\n            this.$set(this.internalErrors, field, this.errors[field].slice());\r\n          }\r\n        }\r\n        this.checkErrors();\r\n        this.$forceUpdate();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  mounted() {\r\n    let self = this;\r\n    setTimeout(() => {\r\n      self.load = true;\r\n    }, 500);\r\n    this.fields.forEach((field) => {\r\n      this.$watch(() => field, this.handleChange, { deep: true });\r\n    });\r\n    this.internalFields = this.fields.slice();\r\n    for (let field of Object.keys(this.errors)) {\r\n      this.internalErrors[field] = this.errors[field].slice();\r\n    }\r\n  },\r\n  methods: {\r\n    checkErrors() {\r\n      for (let field of Object.keys(this.internalErrors)) {\r\n        if (this.internalErrors[field].length != 0) {\r\n          this.errorsExist = true;\r\n          return true;\r\n        }\r\n      }\r\n      this.errorsExist = false;\r\n      return false;\r\n    },\r\n    submitForm(index) {\r\n      if (\r\n        index == this.internalFields.length - 1 &&\r\n        this.allowSubmissionOnEnter\r\n      ) {\r\n        this.$emit(\"submit\");\r\n      }\r\n    },\r\n    clearAll() {\r\n      for (let field of this.internalFields) {\r\n        field.value = \"\";\r\n      }\r\n      this.$emit(\"clear\");\r\n      this.$emit(\"fields\", this.internalFields.slice());\r\n    },\r\n    objectDeepEquals(ob1, ob2) {\r\n      let ob1Keys = Object.keys(ob1);\r\n      let ob2Keys = Object.keys(ob2);\r\n      if (ob1Keys.length !== ob2Keys.length) {\r\n        return false;\r\n      }\r\n      for (let key of ob1Keys) {\r\n        if (ob2Keys.indexOf(key) == -1) {\r\n          return false;\r\n        }\r\n        if (typeof ob1[key] != typeof ob2[key]) {\r\n          return false;\r\n        }\r\n        if (typeof ob1[key] == \"object\") {\r\n          if (!this.objectDeepEquals(ob1[key], ob2[key])) {\r\n            return false;\r\n          }\r\n        } else if (Array.isArray(ob1[key])) {\r\n          if (!this.deepEquals(ob1[key], ob2[key])) {\r\n            return false;\r\n          }\r\n        } else {\r\n          if (ob1[key] != ob2[key]) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    deepEquals(ar1, ar2) {\r\n      let still_matches = true;\r\n      let self = this;\r\n      if (!Array.isArray(ar1) || !Array.isArray(ar2)) {\r\n        return false;\r\n      }\r\n      if (ar1.length !== ar2.length) {\r\n        return false;\r\n      }\r\n      ar1.forEach((val1, index) => {\r\n        let val2 = ar2[index];\r\n        if (val1 !== val2 && !self.objectDeepEquals(val1, val2)) {\r\n          still_matches = false;\r\n        }\r\n      });\r\n      return still_matches;\r\n    },\r\n    validateField(field) {\r\n      if (typeof field.validation == \"function\") {\r\n        let value = field.validation(field.value, this.internalFields);\r\n        if (value) {\r\n          if (!Array.isArray(this.internalErrors[field.name])) {\r\n            this.$set(this.internalErrors, field.name, [value]);\r\n          }\r\n          if (this.internalErrors[field.name].indexOf(value) == -1) {\r\n            this.internalErrors[field.name].push(value);\r\n          }\r\n          this.$forceUpdate();\r\n          this.$emit(\"errors\", this.internalErrors);\r\n          this.checkErrors();\r\n          return false;\r\n        }\r\n      }\r\n      this.internalErrors[field.name] = [];\r\n      if (this.overridenFieldErrors.indexOf(field.name) == -1) {\r\n        this.overridenFieldErrors.push(field.name);\r\n      }\r\n      this.$emit(\"fields\", this.internalFields.slice());\r\n      this.$emit(\"errors\", this.internalErrors);\r\n      this.checkErrors();\r\n      return true;\r\n    },\r\n    handleChange() {\r\n      this.internalFields = this.fields.slice();\r\n    },\r\n    submit($e) {\r\n      $e.preventDefault();\r\n      this.overridenFieldErrors = [];\r\n      document.activeElement.blur();\r\n      this.$emit(\"submit\");\r\n    },\r\n  },\r\n};\r\nexport default VueForm;\r\n</script>\r\n\r\n<style>\r\n.field-placeholder {\r\n  position: absolute;\r\n  left: 0px;\r\n  right: 0px;\r\n  top: 20px;\r\n}\r\n.form-bottom-content {\r\n  margin-top: 25px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.form-error-message {\r\n  min-height: 17px;\r\n  min-width: 1px;\r\n}\r\n.opacity-transparent {\r\n  opacity: 0;\r\n}\r\n.form-button-spacing {\r\n  margin-right: 5px;\r\n}\r\n@keyframes FormLoadingSpinner {\r\n  from {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotate(359deg);\r\n    transform: rotate(359deg);\r\n  }\r\n}\r\n.loading-spinner {\r\n  -webkit-animation: FormLoadingSpinner 0.5s infinite steps(8); /* Safari, Chrome and Opera > 12.1 */\r\n  -moz-animation: FormLoadingSpinner 0.5s infinite steps(8); /* Firefox < 16 */\r\n  -ms-animation: FormLoadingSpinner 0.5s infinite steps(8); /* Internet Explorer */\r\n  -o-animation: FormLoadingSpinner 0.5s infinite steps(8); /* Opera < 12.1 */\r\n  animation: FormLoadingSpinner 0.5s infinite steps(8);\r\n}\r\n</style>\r\n","// Import vue component\r\nimport VueForm from \"./Form.vue\";\r\n\r\n// install function executed by Vue.use()\r\nconst install = function installVueStaticAlert(Vue) {\r\n  if (install.installed) return;\r\n  install.installed = true;\r\n  Vue.component(\"VueForm\", VueForm);\r\n};\r\n\r\n// Create module definition for Vue.use()\r\nconst plugin = {\r\n  install,\r\n};\r\n\r\n// To auto-install when vue is found\r\n// eslint-disable-next-line no-redeclare\r\n/* global window, global */\r\nlet GlobalVue = null;\r\nif (typeof window !== \"undefined\") {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== \"undefined\") {\r\n  GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\n// Inject install function into component - allows component\r\n// to be registered via Vue.use() as well as Vue.component()\r\nVueForm.install = install;\r\n\r\n// Export component by default\r\nexport { VueForm };\r\nexport default VueForm;\r\n\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["install","installVueStaticAlert","Vue","installed","component","VueForm","plugin","GlobalVue","window","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcA,yDAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnqBAAT,CAA+BC,GAA/B,EAAoC;AAClD,MAAIF,OAAO,CAACG,SAAZ,EAAuB;AACvBH,EAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,SAAd,EAAyBC,mBAAzB;AACD,CAJD;;;AAOA,IAAMC,MAAM,GAAG;AACbN,EAAAA,OAAO,EAAPA;AADa,CAAf;AAKA;;AACA;;AACA,IAAIO,SAAS,GAAG,IAAhB;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,EAAAA,SAAS,GAAGC,MAAM,CAACN,GAAnB;AACD,CAFD,MAEO,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,EAAAA,SAAS,GAAGE,MAAM,CAACP,GAAnB;AACD;;AACD,IAAIK,SAAJ,EAAe;AACbA,EAAAA,SAAS,CAACG,GAAV,CAAcJ,MAAd;AACD;AAGD;;;AACAD,mBAAO,CAACL,OAAR,GAAkBA,OAAlB;AAOA;AACA;;;;;"}