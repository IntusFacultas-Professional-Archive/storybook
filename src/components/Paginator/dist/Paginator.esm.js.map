{"version":3,"file":"Paginator.esm.js","sources":["../src/Paginator.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <pagination-container aria-label=\"Page navigation\" :flavor=\"flavor\">\r\n    <pagination-list>\r\n      <pagination-item v-if=\"showFirstLast\">\r\n        <pagination-button @click=\"select(1)\">First</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item>\r\n        <pagination-button @click=\"step(-1)\">&#10094;</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item\r\n        v-for=\"(page, index) in leftMargin\"\r\n        :key=\"'left' + index\"\r\n      >\r\n        <pagination-button @click=\"select(page)\">{{ page }}</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item v-if=\"leftMargin.length == marginPages\">\r\n        <pagination-button :disabled=\"true\">...</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item\r\n        v-for=\"(page, index) in slide\"\r\n        :active=\"currentPage == page\"\r\n        :key=\"'slide' + index\"\r\n      >\r\n        <pagination-button\r\n          @click=\"select(page)\"\r\n          :flavor=\"flavor\"\r\n          :active=\"currentPage == page\"\r\n          >{{ page }}</pagination-button\r\n        >\r\n      </pagination-item>\r\n      <pagination-item v-if=\"rightMargin.length == marginPages\">\r\n        <pagination-button :disabled=\"true\">...</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item\r\n        v-for=\"(page, index) in rightMargin\"\r\n        :key=\"'right' + index\"\r\n      >\r\n        <pagination-button @click=\"select(page)\">{{ page }}</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item>\r\n        <pagination-button @click=\"step(1)\">&#10095;</pagination-button>\r\n      </pagination-item>\r\n      <pagination-item v-if=\"showFirstLast\">\r\n        <pagination-button @click=\"select(pageCount)\">Last</pagination-button>\r\n      </pagination-item>\r\n    </pagination-list>\r\n  </pagination-container>\r\n</template>\r\n\r\n<script>\r\nimport styled from \"vue-styled-components\";\r\nimport Theme from \"@IntusFacultas/design-system\";\r\nconst props = {\r\n  flavor: String,\r\n  active: Boolean,\r\n  disabled: Boolean,\r\n  defaultTheme: {\r\n    type: Object,\r\n    default: function () {\r\n      return Theme;\r\n    },\r\n  },\r\n};\r\nconst PaginationContainer = styled(\"nav\", props)`\r\n  & button {\r\n    font-family: \"Roboto\", sans-serif;\r\n    background-color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].background.color\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].background.color\r\n        : \"#fff\"};\r\n    color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].color.color\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].color.color\r\n        : \"#222\"};\r\n    border-color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].border.color\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].border.color\r\n        : \"#d9d9d9\"};\r\n  }\r\n  & button:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 0.2rem\r\n      ${(props) =>\r\n        props.theme && props.theme[props.flavor]\r\n          ? props.theme[props.flavor].background.color + \"80\"\r\n          : props.defaultTheme[props.flavor] &&\r\n            props.defaultTheme[props.flavor].background.color\r\n          ? props.defaultTheme[props.flavor].background.color + \"80\"\r\n          : \"#ddcccc80\"};\r\n    color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].color.focus\r\n        : props.defaultTheme[props.flavor] &&\r\n          props.defaultTheme[props.flavor].color.focus\r\n        ? props.defaultTheme[props.flavor].color.focus\r\n        : \"#000\"};\r\n  }\r\n  & button:hover {\r\n    background-color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].background.hover\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].background.hover\r\n        : \"#d5d5d5\"};\r\n    color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].color.hover\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].color.hover\r\n        : \"#222\"};\r\n    border-color: ${(props) =>\r\n      props.theme && props.theme[props.flavor]\r\n        ? props.theme[props.flavor].border.hover\r\n        : props.defaultTheme[props.flavor]\r\n        ? props.defaultTheme[props.flavor].border.hover\r\n        : \"#d5d5d5\"};\r\n  }\r\n  & * {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Old versions of Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst PaginationList = styled(\"ul\", props)`\r\n  padding-left: 0px;\r\n  display: flex;\r\n  list-style: none;\r\n`;\r\nconst PaginationItem = styled(\"li\", props)`\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n    background-color: rgba(0,0,0, .15)\r\n  `\r\n      : \"\"}\r\n`;\r\nconst PaginationButton = styled(\"button\", props)`\r\n  ${(props) =>\r\n    props.disabled\r\n      ? `\r\n        opacity: 0.9;\r\n        cursor: not-allowed;\r\n        pointer-events: none;\r\n    `\r\n      : \"\"}\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n        pointer-events: none;\r\n        border-bottom-width: 2px;\r\n        background-color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].background.hover\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].background.hover\r\n            : \"#e8e8e8\"\r\n        } !important;\r\n        color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].color.hover\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].color.hover\r\n            : \"#222\"\r\n        } !important;\r\n        border-color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].border.hover\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].border.hover\r\n            : \"#d5d5d5\"\r\n        } !important;\r\n    `\r\n      : \"\"}\r\n  padding: 0.5rem 0.75rem;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  min-height: 39px;\r\n  display: block;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: color 0.1s ease-in-out, background-color 0.1s ease-in-out,\r\n    border-color 0.1s ease-in-out, box-shadow 0.1s ease-in-out;\r\n`;\r\nexport const Paginator = {\r\n  components: {\r\n    PaginationContainer,\r\n    PaginationList,\r\n    PaginationItem,\r\n    PaginationButton,\r\n  },\r\n  data() {\r\n    return {\r\n      pages: [],\r\n      leftFence: -1,\r\n      rightFence: -1,\r\n    };\r\n  },\r\n  mounted() {\r\n    for (let page = 1; page < this.pageCount + 1; page++) {\r\n      this.pages.push(page);\r\n    }\r\n  },\r\n  props: {\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    showFirstLast: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    currentPage: {\r\n      type: Number,\r\n      required: 1,\r\n    },\r\n    pageCount: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    marginPages: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    pageRange: {\r\n      type: Number,\r\n      default: 3,\r\n    },\r\n  },\r\n  methods: {\r\n    step(s) {\r\n      if (this.currentPage + s < 1 || this.currentPage + s > this.pageCount) {\r\n        return;\r\n      }\r\n      this.$emit(\"select\", this.currentPage + s);\r\n    },\r\n    select(page) {\r\n      this.$emit(\"select\", page);\r\n    },\r\n  },\r\n  watch: {\r\n    pageCount() {\r\n      this.pages = [];\r\n      for (let page = 1; page < this.pageCount + 1; page++) {\r\n        this.pages.push(page);\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    slide() {\r\n      let radius = Math.floor(this.pageRange / 2);\r\n      let pageIndex = this.currentPage - 1;\r\n      let bottom = pageIndex - radius;\r\n      let top = pageIndex + radius + 1;\r\n      if (bottom < 0) {\r\n        top += Math.abs(bottom);\r\n        bottom = 0;\r\n      }\r\n      if (top > this.pageCount) {\r\n        bottom -= Math.abs(top - this.pageCount);\r\n        top = this.pageCount;\r\n      }\r\n      bottom = bottom >= 0 ? bottom : 0;\r\n      top = top <= this.pageCount ? top : this.pageCount;\r\n      this.leftFence = bottom;\r\n      this.rightFence = top;\r\n      return this.pages.slice(this.leftFence, this.rightFence);\r\n    },\r\n    leftMargin() {\r\n      if (this.leftFence < this.marginPages) {\r\n        return this.pages.slice(0, this.leftFence);\r\n      }\r\n      return this.pages.slice(0, this.marginPages);\r\n    },\r\n    rightMargin() {\r\n      if (this.rightFence > this.pageCount - this.marginPages) {\r\n        return this.pages.slice(this.rightFence, this.pageCount);\r\n      }\r\n      return this.pages.slice(\r\n        this.pageCount - this.marginPages,\r\n        this.pageCount\r\n      );\r\n    },\r\n  },\r\n};\r\nexport default Paginator;\r\n</script>\r\n\r\n<style></style>\r\n","// Import vue component\r\nimport Paginator from \"./Paginator.vue\";\r\n\r\n// install function executed by Vue.use()\r\nconst install = function installPaginator(Vue) {\r\n  if (install.installed) return;\r\n  install.installed = true;\r\n  Vue.component(\"Paginator\", Paginator);\r\n};\r\n\r\n// Create module definition for Vue.use()\r\nconst plugin = {\r\n  install,\r\n};\r\n\r\n// To auto-install when vue is found\r\n// eslint-disable-next-line no-redeclare\r\n/* global window, global */\r\nlet GlobalVue = null;\r\nif (typeof window !== \"undefined\") {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== \"undefined\") {\r\n  GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\n// Inject install function into component - allows component\r\n// to be registered via Vue.use() as well as Vue.component()\r\nPaginator.install = install;\r\n\r\n// Export component by default\r\nexport default Paginator;\r\nexport { Paginator };\r\n\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["install","installPaginator","Vue","installed","component","Paginator","plugin","GlobalVue","window","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;;;;;;;;;CAAA;AAWA;;;;;;;;;;;;;;;;EAAA;AAsEA,4DAAA;AAKA;;EAAA;AAQA;;;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlJA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAGA,IAAMA,OAAO,GAAG,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7C,MAAIF,OAAO,CAACG,SAAZ,EAAuB;AACvBH,EAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,WAAd,EAA2BC,iBAA3B;AACD,CAJD;;;AAOA,IAAMC,MAAM,GAAG;AACbN,EAAAA,OAAO,EAAPA;AADa,CAAf;AAKA;;AACA;;AACA,IAAIO,SAAS,GAAG,IAAhB;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,EAAAA,SAAS,GAAGC,MAAM,CAACN,GAAnB;AACD,CAFD,MAEO,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,EAAAA,SAAS,GAAGE,MAAM,CAACP,GAAnB;AACD;;AACD,IAAIK,SAAJ,EAAe;AACbA,EAAAA,SAAS,CAACG,GAAV,CAAcJ,MAAd;AACD;AAGD;;;AACAD,iBAAS,CAACL,OAAV,GAAoBA,OAApB;AAOA;AACA;;;;;"}