{"version":3,"file":"Tabs.esm.js","sources":["../src/Tabs.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <tab-container ref=\"container\" :flavor=\"flavor\">\r\n    <tab-list ref=\"tabs\">\r\n      <tab-item\r\n        v-for=\"(tab, index) in tabs\"\r\n        :key=\"index\"\r\n        :flavor=\"flavor\"\r\n        :index=\"index\"\r\n        :tab=\"tab\"\r\n        @select=\"passSelect\"\r\n      ></tab-item>\r\n    </tab-list>\r\n  </tab-container>\r\n</template>\r\n\r\n<script>\r\nimport styled from \"vue-styled-components\";\r\nimport Theme from \"@IntusFacultas/design-system\";\r\n\r\nconst props = {\r\n  flavor: String,\r\n  disabled: Boolean,\r\n  active: Boolean,\r\n  defaultTheme: {\r\n    type: Object,\r\n    default: function () {\r\n      return Theme;\r\n    },\r\n  },\r\n};\r\nconst TabContainer = styled(\"nav\", props)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  border-bottom-color: ${props.theme && props.theme[props.flavor]\r\n    ? props.theme[props.flavor].border.color\r\n    : props.defaultTheme[props.flavor]\r\n    ? props.defaultTheme[props.flavor].border.color\r\n    : \"#dee2e6 \"};\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n`;\r\nconst TabList = styled.ul`\r\n  list-style: none;\r\n  padding-left: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-bottom: -1px;\r\n  & * {\r\n    font-family: \"Open Sans Regular\", -apple-system, BlinkMacSystemFont,\r\n      \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif,\r\n      \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  }\r\n`;\r\nconst Tab = styled(\"li\", props)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  min-width: 100px;\r\n  padding: 0.1rem 1rem 0 1rem;\r\n  height: 40px;\r\n  ${(props) =>\r\n    props.disabled\r\n      ? `\r\n        pointer-events: none;\r\n        cursor: not-allowed\r\n        `\r\n      : \"\"}\r\n  border-radius: 4px 4px 0px 0px;\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n        background-color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].background.hover\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].background.hover\r\n            : \"white\"\r\n        };\r\n        color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].color.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].color.color\r\n            : \"#222\"\r\n        };\r\n        stroke: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].background.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].background.color\r\n            : \"#222\"\r\n        };\r\n        fill: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].color.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].color.color\r\n            : \"#222\"\r\n        };\r\n        color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].color.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].color.color\r\n            : \"#222\"\r\n        };\r\n\r\n        border-top-color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].border.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].border.color\r\n            : \"#dee2e6 \"\r\n        };\r\n        border-top-style: solid;\r\n        border-top-width: 1px;\r\n\r\n        border-left-color: ${\r\n          props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].border.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].border.color\r\n            : \"#dee2e6 \"\r\n        };\r\n        border-left-style: solid;\r\n        border-left-width: 1px;\r\n\r\n        border-right-color: ${\r\n          props.disabled\r\n            ? \"rgba(0, 0, 0, 0.3)\"\r\n            : props.theme && props.theme[props.flavor]\r\n            ? props.theme[props.flavor].border.color\r\n            : props.defaultTheme[props.flavor]\r\n            ? props.defaultTheme[props.flavor].border.color\r\n            : \"#dee2e6 \"\r\n        };\r\n        border-right-style: solid;\r\n        border-right-width: 1px;\r\n        `\r\n      : `\r\n        &:hover {\r\n            background-color: #eee;\r\n            text-decoration: none;\r\n            outline: none;\r\n        }\r\n        & * {\r\n          color: #222;\r\n        }\r\n    `}\r\n  & * {\r\n    ${(props) => (props.disabled ? `opacity: .6` : \"\")}\r\n    text-decoration: none;\r\n    outline: none;\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n    -khtml-user-select: none; /* Konqueror HTML */\r\n    -moz-user-select: none; /* Firefox */\r\n    -ms-user-select: none; /* Internet Explorer/Edge */\r\n    user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */\r\n  }\r\n`;\r\nconst TabItem = {\r\n  components: { Tab },\r\n  props: {\r\n    index: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    tab: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  methods: {\r\n    handleClick() {\r\n      if (this.tab.active || this.tab.disabled) {\r\n        return;\r\n      }\r\n      if (this.tab.type == \"link\") {\r\n        window.location.href = this.tab.value;\r\n      } else {\r\n        this.tabClick(this.tab);\r\n      }\r\n    },\r\n    tabClick(tab) {\r\n      this.$emit(\"select\", tab.value);\r\n    },\r\n  },\r\n  template: `\r\n        <tab\r\n          :flavor='flavor'\r\n          :disabled=\"tab.disabled\"\r\n          :active=\"tab.active\"\r\n          @click=\"handleClick\"\r\n          tabindex=\"0\"\r\n          @keyup.enter=\"handleClick\"\r\n          @keyup.space=\"handleClick\"\r\n          :role=\"tab.type == 'link' ? 'link' : 'button'\">\r\n            <a v-if=\"tab.type == 'link'\" :href=\"tab.value\">{{tab.text}}</a>\r\n            <span v-else @click=\"tabClick(tab)\">{{tab.text}}</span>\r\n            <span v-html=\"tab.html\"></span>\r\n            <span v-if='tab.disabled' class=\"sr-only\">(disabled)</span>\r\n            <span v-if='tab.active' class=\"sr-only\">(active)</span>\r\n        </tab>\r\n    `,\r\n};\r\nexport const Tabs = {\r\n  components: { TabContainer, TabItem, TabList, Tab },\r\n  props: {\r\n    flavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    tabs: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    passSelect(value) {\r\n      this.$emit(\"select\", value);\r\n    },\r\n  },\r\n};\r\nexport default Tabs;\r\n</script>\r\n\r\n<style>\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  -webkit-clip-path: inset(50%);\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n</style>\r\n","// Import vue component\r\nimport Tabs from \"./Tabs.vue\";\r\n\r\n// install function executed by Vue.use()\r\nconst install = function installTabs(Vue) {\r\n  if (install.installed) return;\r\n  install.installed = true;\r\n  Vue.component(\"Tabs\", Tabs);\r\n};\r\n\r\n// Create module definition for Vue.use()\r\nconst plugin = {\r\n  install,\r\n};\r\n\r\n// To auto-install when vue is found\r\n// eslint-disable-next-line no-redeclare\r\n/* global window, global */\r\nlet GlobalVue = null;\r\nif (typeof window !== \"undefined\") {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== \"undefined\") {\r\n  GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\n// Inject install function into component - allows component\r\n// to be registered via Vue.use() as well as Vue.component()\r\nTabs.install = install;\r\n\r\n// Export component by default\r\nexport default Tabs;\r\nexport { Tabs };\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["install","installTabs","Vue","installed","component","Tabs","plugin","GlobalVue","window","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;CAAA;AAWA,6OAAA;AAWA,2CAAA;AAaA;;;;;;EAAA;AA8GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApKA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAGA,IAAMA,OAAO,GAAG,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxC,MAAIF,OAAO,CAACG,SAAZ,EAAuB;AACvBH,EAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,MAAd,EAAsBC,iBAAtB;AACD,CAJD;;;AAOA,IAAMC,MAAM,GAAG;AACbN,EAAAA,OAAO,EAAPA;AADa,CAAf;AAKA;;AACA;;AACA,IAAIO,SAAS,GAAG,IAAhB;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,EAAAA,SAAS,GAAGC,MAAM,CAACN,GAAnB;AACD,CAFD,MAEO,IAAI,OAAOO,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,EAAAA,SAAS,GAAGE,MAAM,CAACP,GAAnB;AACD;;AACD,IAAIK,SAAJ,EAAe;AACbA,EAAAA,SAAS,CAACG,GAAV,CAAcJ,MAAd;AACD;AAGD;;;AACAD,iBAAI,CAACL,OAAL,GAAeA,OAAf;AAMA;AACA;;;;;"}