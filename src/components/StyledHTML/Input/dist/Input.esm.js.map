{"version":3,"file":"Input.esm.js","sources":["../src/Input.vue","../src/entry.js"],"sourcesContent":["<template>\r\n  <div class=\"input-container\">\r\n    <n-label :dark=\"labelDark\" :flavor=\"labelFlavor\" :for=\"name\">\r\n      {{ label }}\r\n    </n-label>\r\n    <n-input\r\n      :flavor=\"flavor\"\r\n      :id=\"name\"\r\n      :readonly=\"readonly\"\r\n      :placeholder=\"placeholder\"\r\n      :pattern=\"pattern\"\r\n      :multiple=\"multiple\"\r\n      :min=\"min\"\r\n      :max=\"max\"\r\n      :name=\"name\"\r\n      :type=\"inputType\"\r\n      :required=\"required\"\r\n      :disabled=\"disabled\"\r\n      :autofocus=\"autofocus\"\r\n      :autocomplete=\"autocomplete\"\r\n      :value=\"internalValue\"\r\n      @input=\"onInput\"\r\n      @change=\"onChange\"\r\n      @focus=\"onFocus\"\r\n      @keyup=\"$emit('keyup', $event)\"\r\n    ></n-input>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { NLabel } from \"@IntusFacultas/typography\";\r\nimport styled from \"vue-styled-components\";\r\nimport Theme from \"@IntusFacultas/design-system\";\r\nconst props = {\r\n  flavor: {\r\n    type: String,\r\n    default: \"LightBlue\",\r\n  },\r\n  defaultTheme: {\r\n    type: Object,\r\n    default: function () {\r\n      return Theme;\r\n    },\r\n  },\r\n};\r\nexport const NInput = styled(\"input\", props)`\r\n  width: 100%;\r\n  height: 35px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  padding: 2px 5px 2px 5px;\r\n  margin-top: 2px;\r\n  box-sizing: border-box;\r\n  font-family: \"Open Sans Regular\", -apple-system, BlinkMacSystemFont,\r\n    \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\",\r\n    \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n  transition: box-shadow 0.5s cubic-bezier(0, 0.99, 0.37, 1.01);\r\n  &:focus {\r\n    border-color: 1px solid\r\n      ${(props) =>\r\n        props.theme && props.theme[props.flavor]\r\n          ? props.theme[props.flavor].border.color\r\n          : props.defaultTheme[props.flavor] &&\r\n            props.defaultTheme[props.flavor].border.color\r\n          ? props.defaultTheme[props.flavor].border.color\r\n          : \"#04040480\"};\r\n    outline: none;\r\n    box-shadow: 0px 0px 0px 3px\r\n      ${(props) =>\r\n        props.theme && props.theme[props.flavor]\r\n          ? props.theme[props.flavor].border.color\r\n          : props.defaultTheme[props.flavor] &&\r\n            props.defaultTheme[props.flavor].border.color\r\n          ? props.defaultTheme[props.flavor].border.color\r\n          : \"#10d2ff80\"};\r\n  }\r\n  &:read-only {\r\n    background-color: #e9e9e9;\r\n    color: #747474;\r\n  }\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    pointer-events: none;\r\n    color: #747474;\r\n    background-color: #e2e2e2;\r\n  }\r\n`;\r\nexport const VueInput = {\r\n  name: \"vue-input\",\r\n  components: { NInput, NLabel },\r\n  data: function () {\r\n    return {\r\n      internalValue: \"\",\r\n    };\r\n  },\r\n  props: {\r\n    flavor: {\r\n      type: String,\r\n      default: \"LightBlue\",\r\n    },\r\n    autocomplete: {\r\n      type: String,\r\n      default: \"off\",\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    pattern: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    min: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    max: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    inputType: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    labelFlavor: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    labelDark: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    autofocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  watch: {\r\n    value(newVal, oldVal) {\r\n      this.internalValue = newVal;\r\n    },\r\n  },\r\n  mounted() {\r\n    var self = this;\r\n    if (typeof self.$parent !== \"undefined\") {\r\n      if (!self.$parent.$refs.inputs) self.$parent.$refs.inputs = {};\r\n      self.$parent.$refs.inputs[self.name] = self;\r\n    }\r\n  },\r\n  methods: {\r\n    onInput($e) {\r\n      var self = this;\r\n      this.internalValue = $e;\r\n      self.$emit(\"input\", this.internalValue);\r\n    },\r\n    onChange() {\r\n      this.$emit(\"change\", this.internalValue);\r\n    },\r\n    onFocus() {\r\n      this.$emit(\"focus\");\r\n    },\r\n  },\r\n};\r\nexport default VueInput;\r\n</script>\r\n\r\n<style>\r\n.input-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import { VueInput, NInput } from \"./Input.vue\";\r\n\r\nlet components = [\r\n  { label: \"VueInput\", component: VueInput },\r\n  { label: \"NInput\", component: NInput },\r\n];\r\n\r\nlet GlobalVue = null;\r\nfor (let component_obj of components) {\r\n  // install function executed by Vue.use()\r\n  const install = function installComponent(Vue) {\r\n    if (install.installed) return;\r\n    install.installed = true;\r\n    Vue.component(component_obj.label, component_obj.component);\r\n  };\r\n\r\n  // Create module definition for Vue.use()\r\n  const plugin = {\r\n    install,\r\n  };\r\n\r\n  // To auto-install when vue is found\r\n  // eslint-disable-next-line no-redeclare\r\n  /* global window, global */\r\n  if (typeof window !== \"undefined\") {\r\n    GlobalVue = window.Vue;\r\n  } else if (typeof global !== \"undefined\") {\r\n    GlobalVue = global.Vue;\r\n  }\r\n  if (GlobalVue) {\r\n    GlobalVue.use(plugin);\r\n  }\r\n\r\n  // Inject install function into component - allows component\r\n  // to be registered via Vue.use() as well as Vue.component()\r\n  component_obj.component.install = install;\r\n}\r\n\r\n// Export component by default\r\nexport { VueInput, NInput };\r\nexport default VueInput;\r\n\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\r\n"],"names":["components","label","component","VueInput","NInput","GlobalVue","component_obj","install","installComponent","Vue","installed","plugin","window","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;;;;;;;;;;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjCA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,IAAIA,UAAU,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,SAAS,EAAEC;AAAhC,CADe,EAEf;AAAEF,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,SAAS,EAAEE;AAA9B,CAFe,CAAjB;AAKA,IAAIC,SAAS,GAAG,IAAhB;;;AACK,MAAIC,aAAa,kBAAjB;;AACH;AACA,MAAMC,OAAO,GAAG,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7C,QAAIF,OAAO,CAACG,SAAZ,EAAuB;AACvBH,IAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACAD,IAAAA,GAAG,CAACP,SAAJ,CAAcI,aAAa,CAACL,KAA5B,EAAmCK,aAAa,CAACJ,SAAjD;AACD,GAJD;;;AAOA,MAAMS,MAAM,GAAG;AACbJ,IAAAA,OAAO,EAAPA;AADa,GAAf;AAKA;;AACA;;AACA,MAAI,OAAOK,MAAP,KAAkB,WAAtB,EAAmC;AACjCP,IAAAA,SAAS,GAAGO,MAAM,CAACH,GAAnB;AACD,GAFD,MAEO,IAAI,OAAOI,MAAP,KAAkB,WAAtB,EAAmC;AACxCR,IAAAA,SAAS,GAAGQ,MAAM,CAACJ,GAAnB;AACD;;AACD,MAAIJ,SAAJ,EAAe;AACbA,IAAAA,SAAS,CAACS,GAAV,CAAcH,MAAd;AACD;AAGD;;;AACAL,EAAAA,aAAa,CAACJ,SAAd,CAAwBK,OAAxB,GAAkCA,OAAlC;;;AA3BF,+BAA0BP,UAA1B,iCAAsC;AAAA;AA4BrC;AAOD;AACA;;;;;"}