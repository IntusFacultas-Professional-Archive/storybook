import{NInput as e}from"@IntusFacultas/input";import{NButton as t}from"@IntusFacultas/button";var n={name:"select-me",components:{NInput:e,NButton:t},data:function(){return{timeout:"",optionSearch:"",showOptions:!1,showSelected:!1,selectBoxWidth:0,calculatedWidth:0,calculatedHeight:0,calculatedPadding:0,selectedOptions:[],hoveredOption:{},hoveredSelectedOption:{},combinedPaddingPerBadge:26,hoveredIndex:-1,hoveredSelectedIndex:-1}},watch:{value:function(e){this.selectedOptions=e,window.requestAnimationFrame(this.setSelectBoxWidth),this.setCalculatedPadding()}},props:{value:{type:Array,default:function(){return[]}},name:{type:String,required:!0},badgeFlavor:{type:String,default:"Primary"},flavor:{type:String,default:"LightBlue"},displayAttribute:{type:String,default:"text"},valueAttribute:{type:String,default:"value"},canBeEmpty:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},options:{type:Array,default:function(){return[]}},debug:{type:Boolean,default:!1},multiSelect:{type:Boolean,default:!1},initialValues:{type:Array,default:function(){return[]}}},computed:{computedSpanClass:function(){return this.multiSelect?[]:["selectme-badge-single-span"]},computedCutOff:function(){return this.calculatedWidth-100},showDropdown:function(){return this.showOptions||this.debug},selectOptions:function(){var e=this,t=e.options;return e.optionSearch&&(t=function(e,t){for(var n=[],r=0;r<t.length;r++)e(t[r])&&n.push(t[r]);return n}((function(t){return t[e.displayAttribute].toUpperCase().indexOf(e.optionSearch.toUpperCase())>-1}),t)),t}},methods:{deselectDropdownOption:function(e){this.deselectOption(e,!1),window.requestAnimationFrame(this.setSelectBoxWidth)},handleOffClick:function(e){e.target.attributes["data-dropdown"]||(this.showSelected=!1)},toggleSelectedDropdown:function(){this.showSelected=!this.showSelected},selectHoveredOption:function(){var e=this;e.showOptions?Object.keys(e.hoveredOption).length>0&&(e.contains(e.hoveredOption,e.selectedOptions)?e.deselectOption(e.hoveredOption,!1):(e.multiSelect||(e.selectedOptions=[]),e.selectedOptions.push(Object.assign({},e.hoveredOption))),e.$emit("input",e.selectedOptions),e.hoveredOption={},e.hoveredIndex=-1,window.requestAnimationFrame(e.setSelectBoxWidth),e.setCalculatedPadding(),e.multiSelect?e.$el.firstChild.focus():e.closeDropdown()):e.showSelected&&(e.deselectOption(e.hoveredSelectedOption),e.$emit("input",e.selectedOptions),e.hoveredSelectedOption={},e.showSelected=!1,setTimeout((function(){e.hoveredIndex=-1,window.requestAnimationFrame(e.setSelectBoxWidth),e.setCalculatedPadding(),e.$el.firstChild.focus()}),550))},hoverElement:function(){var e=this;clearTimeout(e.timeout),e.hoveredOption=e.selectOptions.filter((function(t){return t[e.valueAttribute]==document.activeElement.getAttribute("value")}))[0],e.hoveredIndex=e.selectOptions.map((function(t){return t[e.valueAttribute]})).indexOf(e.hoveredOption[e.valueAttribute])},hoverOption:function(e){var t=this.hoveredIndex+e;if(this.openDropdown(),t>=this.selectOptions.length)this.hoveredIndex=0,this.hoveredOption=this.selectOptions[this.hoveredIndex];else{if(t<-1)return;-1==t?(this.hoveredIndex=t,this.$el.firstChild.focus(),this.closeDropdown(),this.hoveredOption={}):(this.hoveredIndex=t,this.hoveredOption=this.selectOptions[this.hoveredIndex],this.$forceUpdate())}},hoverSelectedOption:function(e){var t=this.hoveredIndex+e;this.showSelected=!0,t>=this.selectedOptions.length||t<-1||(-1==t?(this.hoveredIndex=t,this.$el.firstChild.focus(),this.showSelected=!1,this.hoveredSelectedOption={}):(this.hoveredIndex=t,this.hoveredSelectedOption=this.selectedOptions[this.hoveredIndex],this.$forceUpdate()))},contains:function(e,t){for(var n=0;n<t.length;n++){var r=e[this.displayAttribute]==t[n][this.displayAttribute],o=e[this.valueAttribute]==t[n][this.valueAttribute];if(r&&o)return!0}return!1},isHovered:function(e,t){var n=e[this.displayAttribute]==t[this.displayAttribute],r=e[this.valueAttribute]==t[this.valueAttribute];return n&&r},handleUp:function(){this.showSelected?this.hoverSelectedOption(-1):(this.showOptions,this.hoverOption(-1))},handleDown:function(){this.showSelected?this.hoverSelectedOption(1):(this.showOptions,this.hoverOption(1))},handleLeft:function(){0==this.optionSearch.length&&this.selectedOptions.length>0&&this.selectBoxWidth>this.computedCutOff&!this.showSelected&&(this.closeDropdown(),this.showSelected=!0)},handleRight:function(){this.showSelected&&(this.showSelected=!1,this.hoveredSelectedOption={},this.$el.firstChild.focus())},handleBackspace:function(){if(0==this.optionSearch.length&&this.selectedOptions.length>0&&this.selectBoxWidth<=this.computedCutOff){var e=this.selectedOptions.pop();this.$emit("input",this.selectedOptions),window.requestAnimationFrame(this.setSelectBoxWidth),this.setCalculatedPadding(),this.optionSearch=e[this.displayAttribute]}},contained:function(e){return this.contains(e,this.selectedOptions)},selectOption:function(e){this.contains(e,this.selectedOptions)?this.deselectOption(e,!this.multiSelect):(this.multiSelect||(this.selectedOptions=[]),this.selectedOptions.push(e)),this.optionSearch="",this.multiSelect||this.closeDropdown(),this.$emit("input",this.selectedOptions),window.requestAnimationFrame(this.setSelectBoxWidth),this.setCalculatedPadding()},deselectOption:function(e,t){var n=this;if(n.canBeEmpty||1!=n.selectedOptions.length){var r=function(e,t){for(var r=0;r<t.length;r++)if(e[n.valueAttribute]==t[r][n.valueAttribute])return r;return-1}(e,n.selectedOptions);n.selectedOptions.splice(r,1),n.$forceUpdate(),(void 0===t||t)&&n.closeDropdown(),n.$emit("input",n.selectedOptions),window.requestAnimationFrame(n.setSelectBoxWidth),n.setCalculatedPadding()}},closeDropdown:function(){var e=this;e.hoveredIndex=-1,e.timeout=setTimeout((function(){e.showOptions=!1}),200)},openDropdown:function(){if(this.$emit("focus"),clearTimeout(this.timeout),this.disabled)return!1;this.hoveredIndex=-1,this.setCalculatedWidth(),this.showSelected=!1,this.showOptions=!0},setSelectBoxWidth:function(){this.$refs.selectBox&&(this.selectBoxWidth=this.$refs.selectBox.clientWidth+5),window.requestAnimationFrame(this.setSelectBoxWidth)},setCalculatedPadding:function(){this.selectBoxWidth>this.computedCutOff?this.calculatedPadding=this.$refs.selectDropdownBox.clientWidth+10:this.calculatedPadding=this.selectBoxWidth,window.requestAnimationFrame(this.setCalculatedPadding)},setCalculatedWidth:function(){var e=this;setTimeout((function(){try{e.calculatedHeight=-1*e.$el.firstChild.offsetHeight+5,e.multiSelect||(e.calculatedHeight-=4),e.calculatedWidth=e.$el.firstChild.offsetWidth,window.requestAnimationFrame(e.setSelectBoxWidth),e.setCalculatedPadding()}catch(e){}}),50)}},mounted:function(){var e=this;e.canBeEmpty||e.selectOption(e.options[0]),window.requestAnimationFrame(e.setCalculatedPadding),window.addEventListener("resize",e.setCalculatedWidth),window.addEventListener("click",e.handleOffClick),e.setCalculatedWidth(),setTimeout((function(){e.setCalculatedWidth()}),200);for(var t=0;t<e.initialValues.length;t++)for(var n=e.initialValues[t],r=0;r<e.options.length;r++)if(e.options[r][e.valueAttribute]==n[e.valueAttribute]){e.selectedOptions.push(Object.assign({},e.options[r]));break}},beforeDestroy:function(){window.removeEventListener("resize",self.setCalculatedWidth),window.removeEventListener("click",self.handleOffClick)}};const r="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());let o;const s={};const i=n;var l=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"selectme-container"},[n("n-input",{style:{"padding-left":e.calculatedPadding+"px"},attrs:{id:e.name,autocomplete:"off",type:"text",placeholder:"Search...",flavor:e.flavor,disabled:e.disabled},on:{click:e.openDropdown,focus:e.openDropdown,input:e.openDropdown,blur:e.closeDropdown,keydown:[function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"delete",[8,46],t.key,["Backspace","Delete","Del"])?null:e.handleBackspace(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"down",40,t.key,["Down","ArrowDown"])?null:e.handleDown(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"up",38,t.key,["Up","ArrowUp"])?null:e.handleUp(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"left",37,t.key,["Left","ArrowLeft"])||"button"in t&&0!==t.button?null:e.handleLeft(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"right",39,t.key,["Right","ArrowRight"])||"button"in t&&2!==t.button?null:e.handleRight(t)}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.selectHoveredOption(t)}},model:{value:e.optionSearch,callback:function(t){e.optionSearch=t},expression:"optionSearch"}}),e._v(" "),e.showDropdown?n("div",{staticClass:"selectme-dropdown",style:{width:e.calculatedWidth+"px"}},[n("ul",[e._l(e.selectOptions,(function(t,r){return n("li",{key:"dropdown-"+t[e.valueAttribute]+"-"+r,ref:"hover"+t[e.valueAttribute],refInFor:!0,class:{"selectme-selected":e.contained(t),"selectme-hovered":e.isHovered(t,e.hoveredOption)},attrs:{tabindex:"0",role:"button",value:t[e.valueAttribute]},on:{keyup:[function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.selectHoveredOption(t)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"space",32,t.key,[" ","Spacebar"])?null:e.selectHoveredOption(t)}],focus:function(t){return e.hoverElement()},keydown:[function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"down",40,t.key,["Down","ArrowDown"])?null:e.hoverOption(1)},function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"up",38,t.key,["Up","ArrowUp"])?null:e.hoverOption(-1)}],blur:e.closeDropdown,click:function(n){return e.selectOption(t)}}},[e.contained(t)?n("span",{staticClass:"sr-only"},[e._v("Active:")]):n("span",{staticClass:"sr-only"},[e._v("Press enter to select:")]),e._v("\n        "+e._s(t[e.displayAttribute])+"\n      ")])})),e._v(" "),0==e.selectOptions.length?n("li",[e._v("No results found")]):e._e()],2)]):e._e(),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.selectBoxWidth>e.computedCutOff&&e.selectedOptions.length>0,expression:"selectBoxWidth > computedCutOff && selectedOptions.length > 0"}],ref:"selectDropdownBox",staticClass:"selectme-selected",style:{top:e.multiSelect?e.calculatedHeight+"px":e.calculatedHeight+4+"px"},attrs:{"data-dropdown":"parent"}},[n("n-button",{staticClass:"selectme-button selectme-badge",attrs:{flavor:e.badgeFlavor,"data-dropdown":"toggle"},on:{click:e.toggleSelectedDropdown}},[e._v("\n      "+e._s(e.selectedOptions.length)+" selected...\n      "),e.showSelected?n("span",{staticClass:"select-me-ignore-me"},[e._v("▴")]):n("span",{staticClass:"select-me-ignore-me"},[e._v("▾")])]),e._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:e.showSelected,expression:"showSelected"}],staticClass:"selectme-dropdown"},[n("ul",e._l(e.selectedOptions,(function(t,r){return n("li",{key:"selected-"+t[e.valueAttribute]+"-"+r,ref:"selected"+t[e.valueAttribute],refInFor:!0,class:{"selectme-hovered":e.isHovered(t,e.hoveredSelectedOption)},attrs:{tabindex:"0",role:"button","data-dropdown":"child"},on:{keyup:[function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.deselectDropdownOption(t)},function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"space",32,n.key,[" ","Spacebar"])?null:e.deselectDropdownOption(t)}],click:function(n){return e.deselectDropdownOption(t)}}},[n("span",[e._v("×")]),e._v("\n          "+e._s(t[e.displayAttribute])+"\n        ")])})),0)])],1),e._v(" "),n("div",{ref:"selectBox",staticClass:"selectme-selected",class:{"hidden-inline":e.selectBoxWidth>e.computedCutOff},style:{top:e.calculatedHeight+"px"}},e._l(e.selectedOptions,(function(t,r){return n("n-button",{key:"selected-badge-"+t[e.valueAttribute]+"-"+r,staticClass:"selectme-button selectme-badge",class:{"selectme-single-select-badge":!e.multiSelect},attrs:{flavor:e.badgeFlavor},on:{click:function(n){return e.deselectOption(t)}}},[e._v("\n      "+e._s(t[e.displayAttribute])+"\n      "),e.canBeEmpty||!e.canBeEmpty&&e.selectedOptions.length>1?n("span",{staticClass:"select-me-ignore-me",class:e.computedSpanClass},[e._v("×")]):e._e()])})),1)],1)};l._withStripped=!0;const d=function(e,t,n,r,o,s,i,l,d,a){"boolean"!=typeof i&&(d=l,l=i,i=!1);const c="function"==typeof n?n.options:n;let p;if(e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0,o&&(c.functional=!0)),r&&(c._scopeId=r),s?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,d(e)),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=p):t&&(p=i?function(e){t.call(this,a(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,l(e))}),p)if(c.functional){const e=c.render;c.render=function(t,n){return p.call(n),e(t,n)}}else{const e=c.beforeCreate;c.beforeCreate=e?[].concat(e,p):[p]}return n}({render:l,staticRenderFns:[]},(function(e){e&&e("data-v-844281fc_0",{source:'\n.select-me-ignore-me[data-v-844281fc] {\r\n  pointer-events: none;\n}\n.selectme-button[data-v-844281fc] {\r\n  height: 30px;\r\n  margin-top: -2px;\n}\n.selectme-single-select-badge[data-v-844281fc] {\r\n  margin-top: 1px;\n}\n.hidden-inline[data-v-844281fc] {\r\n  opacity: 0;\r\n  pointer-events: none;\n}\n.selectme-badge[data-v-844281fc] {\r\n  display: inline-block;\r\n  padding: 0.25em 0.4em;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: baseline;\r\n  border-radius: 0.25rem;\r\n  font-weight: 700 !important;\r\n  font-size: 16px !important;\r\n  font-family: "Segoe UI" !important;\n}\n.selectme-container[data-v-844281fc] {\r\n  height: 45px;\n}\n.selectme-container *[data-v-844281fc] {\r\n  font-family: "Roboto", sans-serif;\n}\n.sr-only[data-v-844281fc] {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  border: 0;\n}\n.selectme-dropdown[data-v-844281fc] {\r\n  position: absolute;\r\n  z-index: 2;\r\n  background-color: white;\r\n  padding: 5px;\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 0 0 5px 5px;\r\n  box-shadow: 0px 4px 7px -3px #dadada;\r\n  min-width: 200px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\n}\n.selectme-badge-single-span[data-v-844281fc] {\r\n  float: left;\r\n  padding-right: 8px;\n}\n.selectme-badge-transparent[data-v-844281fc] {\r\n  color: black;\r\n  font-size: 16px !important;\r\n  background-color: transparent !important;\n}\n.selectme-selected[data-v-844281fc] {\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-left: 5px;\n}\n.selectme-selected > button[data-v-844281fc] {\r\n  cursor: pointer;\r\n  padding: 7px;\r\n  margin-right: 2px;\n}\n.selectme-dropdown > ul[data-v-844281fc] {\r\n  list-style: none;\r\n  padding-left: 0px;\r\n  margin-left: 0px;\r\n  margin-bottom: 0px;\n}\n.selectme-dropdown > ul > li[data-v-844281fc] {\r\n  padding: 2px 10px 2px 10px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-left: 0px;\r\n  font-size: 16px;\r\n  max-height: 200px;\r\n  margin-bottom: -2px;\r\n  overflow-y: auto;\n}\n.selectme-dropdown > ul > li.selectme-selected[data-v-844281fc] {\r\n  background-color: #007bff;\r\n  color: white;\n}\n.selectme-dropdown > ul > li.selectme-hovered[data-v-844281fc] {\r\n  background-color: #eeeeee;\n}\n.selectme-dropdown > ul > li.selectme-selected.selectme-hovered[data-v-844281fc] {\r\n  background-color: #0069d9;\r\n  color: white;\n}\n.selectme-dropdown > ul > li[data-v-844281fc]:hover {\r\n  background-color: #eeeeee;\n}\n.selectme-dropdown > ul > li.selectme-selected[data-v-844281fc]:hover {\r\n  background-color: #0069d9;\r\n  color: white;\n}\r\n',map:{version:3,sources:["C:\\Users\\pedro\\Documents\\Personal Projects\\GitHub\\storybook\\storybook\\src\\components\\SelectMe\\src\\SelectMe.vue"],names:[],mappings:";AAqiBA;EACA,oBAAA;AACA;AACA;EACA,YAAA;EACA,gBAAA;AACA;AACA;EACA,eAAA;AACA;AACA;EACA,UAAA;EACA,oBAAA;AACA;AACA;EACA,qBAAA;EACA,qBAAA;EACA,gBAAA;EACA,cAAA;EACA,kBAAA;EACA,mBAAA;EACA,wBAAA;EACA,sBAAA;EACA,2BAAA;EACA,0BAAA;EACA,kCAAA;AACA;AACA;EACA,YAAA;AACA;AACA;EACA,iCAAA;AACA;AAEA;EACA,kBAAA;EACA,UAAA;EACA,WAAA;EACA,UAAA;EACA,YAAA;EACA,gBAAA;EACA,sBAAA;EACA,SAAA;AACA;AACA;EACA,kBAAA;EACA,UAAA;EACA,uBAAA;EACA,YAAA;EACA,qCAAA;EACA,0BAAA;EACA,oCAAA;EACA,gBAAA;EACA,iBAAA;EACA,gBAAA;AACA;AACA;EACA,WAAA;EACA,kBAAA;AACA;AACA;EACA,YAAA;EACA,0BAAA;EACA,wCAAA;AACA;AACA;EACA,kBAAA;EACA,qBAAA;EACA,gBAAA;AACA;AACA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,gBAAA;EACA,iBAAA;EACA,gBAAA;EACA,kBAAA;AACA;AACA;EACA,0BAAA;EACA,eAAA;EACA,WAAA;EACA,sBAAA;EACA,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,mBAAA;EACA,gBAAA;AACA;AACA;EACA,yBAAA;EACA,YAAA;AACA;AACA;EACA,yBAAA;AACA;AACA;EACA,yBAAA;EACA,YAAA;AACA;AACA;EACA,yBAAA;AACA;AACA;EACA,yBAAA;EACA,YAAA;AACA",file:"SelectMe.vue",sourcesContent:['<template>\r\n  <div class="selectme-container">\r\n    <n-input\r\n      :id="name"\r\n      autocomplete="off"\r\n      type="text"\r\n      placeholder="Search..."\r\n      @click="openDropdown"\r\n      @focus="openDropdown"\r\n      @input="openDropdown"\r\n      @blur="closeDropdown"\r\n      :flavor="flavor"\r\n      v-model="optionSearch"\r\n      @keydown.delete="handleBackspace"\r\n      @keydown.down="handleDown"\r\n      @keydown.up="handleUp"\r\n      @keydown.left="handleLeft"\r\n      @keydown.right="handleRight"\r\n      @keyup.enter="selectHoveredOption"\r\n      :style="{ \'padding-left\': calculatedPadding + \'px\' }"\r\n      :disabled="disabled"\r\n    ></n-input>\r\n    \x3c!-- Dropdown for all options --\x3e\r\n    <div\r\n      v-if="showDropdown"\r\n      class="selectme-dropdown"\r\n      :style="{ width: calculatedWidth + \'px\' }"\r\n    >\r\n      <ul>\r\n        <li\r\n          @keyup.enter="selectHoveredOption"\r\n          @keyup.space="selectHoveredOption"\r\n          tabindex="0"\r\n          role="button"\r\n          @focus="hoverElement()"\r\n          @keydown.down="hoverOption(1)"\r\n          @keydown.up="hoverOption(-1)"\r\n          @blur="closeDropdown"\r\n          v-for="(option, index) in selectOptions"\r\n          :key="\'dropdown-\' + option[valueAttribute] + \'-\' + index"\r\n          :value="option[valueAttribute]"\r\n          :ref="\'hover\' + option[valueAttribute]"\r\n          @click="selectOption(option)"\r\n          :class="{\r\n            \'selectme-selected\': contained(option),\r\n            \'selectme-hovered\': isHovered(option, hoveredOption)\r\n          }"\r\n        >\r\n          <span class="sr-only" v-if="contained(option)">Active:</span>\r\n          <span class="sr-only" v-else>Press enter to select:</span>\r\n          {{ option[displayAttribute] }}\r\n        </li>\r\n        <li v-if="selectOptions.length == 0">No results found</li>\r\n      </ul>\r\n    </div>\r\n    \x3c!-- Dropdown for selected values. Only shows when selected overflow input--\x3e\r\n    <div\r\n      class="selectme-selected"\r\n      :style="{\r\n        top: multiSelect ? `${calculatedHeight}px` : `${calculatedHeight + 4}px`\r\n      }"\r\n      v-show="selectBoxWidth > computedCutOff && selectedOptions.length > 0"\r\n      ref="selectDropdownBox"\r\n      data-dropdown="parent"\r\n    >\r\n      <n-button\r\n        @click="toggleSelectedDropdown"\r\n        class="selectme-button selectme-badge"\r\n        :flavor="badgeFlavor"\r\n        data-dropdown="toggle"\r\n      >\r\n        {{ selectedOptions.length }} selected...\r\n        <span class="select-me-ignore-me" v-if="!showSelected">&#x25BE;</span>\r\n        <span class="select-me-ignore-me" v-else>&#x25B4;</span>\r\n      </n-button>\r\n      <div class="selectme-dropdown" v-show="showSelected">\r\n        <ul>\r\n          <li\r\n            tabindex="0"\r\n            v-for="(option, index) in selectedOptions"\r\n            :key="\'selected-\' + option[valueAttribute] + \'-\' + index"\r\n            role="button"\r\n            data-dropdown="child"\r\n            @keyup.enter="deselectDropdownOption(option)"\r\n            @keyup.space="deselectDropdownOption(option)"\r\n            :ref="\'selected\' + option[valueAttribute]"\r\n            :class="{\r\n              \'selectme-hovered\': isHovered(option, hoveredSelectedOption)\r\n            }"\r\n            @click="deselectDropdownOption(option)"\r\n          >\r\n            <span>&#215;</span>\r\n            {{ option[displayAttribute] }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Inline selected options --\x3e\r\n    <div\r\n      class="selectme-selected"\r\n      ref="selectBox"\r\n      :style="{ top: calculatedHeight + \'px\' }"\r\n      :class="{ \'hidden-inline\': selectBoxWidth > computedCutOff }"\r\n    >\r\n      <n-button\r\n        :flavor="badgeFlavor"\r\n        class="selectme-button selectme-badge"\r\n        :class="{ \'selectme-single-select-badge\': !multiSelect }"\r\n        v-for="(option, index) in selectedOptions"\r\n        @click="deselectOption(option)"\r\n        :key="\'selected-badge-\' + option[valueAttribute] + \'-\' + index"\r\n      >\r\n        {{ option[displayAttribute] }}\r\n        <span\r\n          :class="computedSpanClass"\r\n          class="select-me-ignore-me"\r\n          v-if="canBeEmpty || (!canBeEmpty && selectedOptions.length > 1)"\r\n          >&#215;</span\r\n        >\r\n      </n-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { NInput } from "@IntusFacultas/input";\r\nimport { NButton } from "@IntusFacultas/button";\r\nconst SelectMe = {\r\n  name: "select-me",\r\n  components: { NInput, NButton },\r\n  data() {\r\n    return {\r\n      timeout: "",\r\n      optionSearch: "",\r\n      showOptions: false,\r\n      showSelected: false,\r\n      selectBoxWidth: 0,\r\n      calculatedWidth: 0,\r\n      calculatedHeight: 0,\r\n      calculatedPadding: 0,\r\n      selectedOptions: [],\r\n      hoveredOption: {},\r\n      hoveredSelectedOption: {},\r\n      combinedPaddingPerBadge: 26,\r\n      hoveredIndex: -1,\r\n      hoveredSelectedIndex: -1\r\n    };\r\n  },\r\n  watch: {\r\n    value(newValue) {\r\n      this.selectedOptions = newValue;\r\n      window.requestAnimationFrame(this.setSelectBoxWidth);\r\n      this.setCalculatedPadding();\r\n    }\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    badgeFlavor: {\r\n      type: String,\r\n      default: "Primary"\r\n    },\r\n    flavor: {\r\n      type: String,\r\n      default: "LightBlue"\r\n    },\r\n    displayAttribute: {\r\n      type: String,\r\n      default: "text"\r\n    },\r\n    valueAttribute: {\r\n      type: String,\r\n      default: "value"\r\n    },\r\n    canBeEmpty: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    options: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    },\r\n    debug: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    multiSelect: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    initialValues: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    computedSpanClass() {\r\n      var self = this;\r\n      if (!self.multiSelect) return ["selectme-badge-single-span"];\r\n      return [];\r\n    },\r\n    computedCutOff() {\r\n      var self = this;\r\n      return self.calculatedWidth - 100;\r\n    },\r\n    showDropdown() {\r\n      var self = this;\r\n      return self.showOptions || self.debug;\r\n    },\r\n    selectOptions() {\r\n      function textContains(n) {\r\n        return (\r\n          n[self.displayAttribute]\r\n            .toUpperCase()\r\n            .indexOf(self.optionSearch.toUpperCase()) > -1\r\n        );\r\n      }\r\n      var self = this;\r\n      let options = self.options;\r\n      function filter(fn, array) {\r\n        var rtArray = [];\r\n        for (var x = 0; x < array.length; x++) {\r\n          if (fn(array[x])) {\r\n            rtArray.push(array[x]);\r\n          }\r\n        }\r\n        return rtArray;\r\n      }\r\n      if (self.optionSearch) {\r\n        options = filter(textContains, options);\r\n      }\r\n      return options;\r\n    }\r\n  },\r\n  methods: {\r\n    deselectDropdownOption(option) {\r\n      var self = this;\r\n      self.deselectOption(option, false);\r\n      window.requestAnimationFrame(self.setSelectBoxWidth);\r\n    },\r\n    handleOffClick(event) {\r\n      var self = this;\r\n      if (!event.target.attributes["data-dropdown"]) {\r\n        self.showSelected = false;\r\n      }\r\n    },\r\n    toggleSelectedDropdown() {\r\n      var self = this;\r\n      self.showSelected = !self.showSelected;\r\n    },\r\n    selectHoveredOption() {\r\n      var self = this;\r\n      if (self.showOptions) {\r\n        if (Object.keys(self.hoveredOption).length > 0) {\r\n          if (!self.contains(self.hoveredOption, self.selectedOptions)) {\r\n            if (!self.multiSelect) self.selectedOptions = [];\r\n            self.selectedOptions.push(Object.assign({}, self.hoveredOption));\r\n          } else {\r\n            self.deselectOption(self.hoveredOption, false);\r\n          }\r\n          self.$emit("input", self.selectedOptions);\r\n          self.hoveredOption = {};\r\n          self.hoveredIndex = -1;\r\n          window.requestAnimationFrame(self.setSelectBoxWidth);\r\n          self.setCalculatedPadding();\r\n          if (self.multiSelect) {\r\n            self.$el.firstChild.focus();\r\n          } else {\r\n            self.closeDropdown();\r\n          }\r\n        }\r\n      } else if (self.showSelected) {\r\n        self.deselectOption(self.hoveredSelectedOption);\r\n        self.$emit("input", self.selectedOptions);\r\n        self.hoveredSelectedOption = {};\r\n        self.showSelected = false;\r\n        setTimeout(function() {\r\n          self.hoveredIndex = -1;\r\n          window.requestAnimationFrame(self.setSelectBoxWidth);\r\n          self.setCalculatedPadding();\r\n          self.$el.firstChild.focus();\r\n        }, 550);\r\n      }\r\n    },\r\n    hoverElement() {\r\n      var self = this;\r\n      clearTimeout(self.timeout);\r\n      self.hoveredOption = self.selectOptions.filter(\r\n        option =>\r\n          option[self.valueAttribute] ==\r\n          document.activeElement.getAttribute("value")\r\n      )[0];\r\n      self.hoveredIndex = self.selectOptions\r\n        .map(option => option[self.valueAttribute])\r\n        .indexOf(self.hoveredOption[self.valueAttribute]);\r\n    },\r\n    hoverOption(step) {\r\n      var self = this;\r\n      var proposedIndex = self.hoveredIndex + step;\r\n      self.openDropdown();\r\n      if (proposedIndex >= self.selectOptions.length) {\r\n        self.hoveredIndex = 0;\r\n        self.hoveredOption = self.selectOptions[self.hoveredIndex];\r\n      } else if (proposedIndex < -1) {\r\n        return;\r\n      } else if (proposedIndex == -1) {\r\n        self.hoveredIndex = proposedIndex;\r\n        self.$el.firstChild.focus();\r\n        self.closeDropdown();\r\n        self.hoveredOption = {};\r\n      } else {\r\n        self.hoveredIndex = proposedIndex;\r\n        self.hoveredOption = self.selectOptions[self.hoveredIndex];\r\n        self.$forceUpdate();\r\n      }\r\n    },\r\n    hoverSelectedOption(step) {\r\n      var self = this;\r\n      var proposedIndex = self.hoveredIndex + step;\r\n      self.showSelected = true;\r\n      if (proposedIndex >= self.selectedOptions.length || proposedIndex < -1) {\r\n        return;\r\n      } else if (proposedIndex == -1) {\r\n        self.hoveredIndex = proposedIndex;\r\n        self.$el.firstChild.focus();\r\n        self.showSelected = false;\r\n        self.hoveredSelectedOption = {};\r\n      } else {\r\n        self.hoveredIndex = proposedIndex;\r\n        self.hoveredSelectedOption = self.selectedOptions[self.hoveredIndex];\r\n        self.$forceUpdate();\r\n      }\r\n    },\r\n    contains(option, options) {\r\n      var self = this;\r\n      for (var x = 0; x < options.length; x++) {\r\n        let textMatches =\r\n          option[self.displayAttribute] == options[x][self.displayAttribute];\r\n        let valueMatches =\r\n          option[self.valueAttribute] == options[x][self.valueAttribute];\r\n        if (textMatches && valueMatches) return true;\r\n      }\r\n      return false;\r\n    },\r\n    isHovered(option, hoverOption) {\r\n      var self = this;\r\n      let textMatches =\r\n        option[self.displayAttribute] == hoverOption[self.displayAttribute];\r\n      let valueMatches =\r\n        option[self.valueAttribute] == hoverOption[self.valueAttribute];\r\n      return textMatches && valueMatches;\r\n    },\r\n    handleUp() {\r\n      var self = this;\r\n      if (self.showSelected) {\r\n        self.hoverSelectedOption(-1);\r\n      } else if (self.showOptions) {\r\n        self.hoverOption(-1);\r\n      } else {\r\n        self.hoverOption(-1);\r\n      }\r\n    },\r\n    handleDown() {\r\n      var self = this;\r\n      if (self.showSelected) {\r\n        self.hoverSelectedOption(1);\r\n      } else if (self.showOptions) {\r\n        self.hoverOption(1);\r\n      } else {\r\n        self.hoverOption(1);\r\n      }\r\n    },\r\n    handleLeft() {\r\n      var self = this;\r\n      if (\r\n        self.optionSearch.length == 0 &&\r\n        self.selectedOptions.length > 0 &&\r\n        (self.selectBoxWidth > self.computedCutOff) & !self.showSelected\r\n      ) {\r\n        self.closeDropdown();\r\n        self.showSelected = true;\r\n      }\r\n    },\r\n    handleRight() {\r\n      var self = this;\r\n      if (self.showSelected) {\r\n        self.showSelected = false;\r\n        self.hoveredSelectedOption = {};\r\n        self.$el.firstChild.focus();\r\n      }\r\n    },\r\n    handleBackspace() {\r\n      var self = this;\r\n      if (\r\n        self.optionSearch.length == 0 &&\r\n        self.selectedOptions.length > 0 &&\r\n        self.selectBoxWidth <= self.computedCutOff\r\n      ) {\r\n        var el = self.selectedOptions.pop();\r\n        self.$emit("input", self.selectedOptions);\r\n        window.requestAnimationFrame(self.setSelectBoxWidth);\r\n        self.setCalculatedPadding();\r\n        self.optionSearch = el[self.displayAttribute];\r\n      }\r\n    },\r\n    contained(option) {\r\n      var self = this;\r\n      return self.contains(option, self.selectedOptions);\r\n    },\r\n    selectOption(option) {\r\n      var self = this;\r\n      if (!self.contains(option, self.selectedOptions)) {\r\n        if (!self.multiSelect) {\r\n          self.selectedOptions = [];\r\n        }\r\n        self.selectedOptions.push(option);\r\n      } else {\r\n        self.deselectOption(option, !self.multiSelect);\r\n      }\r\n      self.optionSearch = "";\r\n      if (!self.multiSelect) {\r\n        self.closeDropdown();\r\n      }\r\n      self.$emit("input", self.selectedOptions);\r\n      window.requestAnimationFrame(self.setSelectBoxWidth);\r\n      self.setCalculatedPadding();\r\n    },\r\n    deselectOption(option, closeDropdown) {\r\n      var self = this;\r\n      if (!self.canBeEmpty && self.selectedOptions.length == 1) {\r\n        return;\r\n      }\r\n      function findIndex(option, options) {\r\n        for (var x = 0; x < options.length; x++) {\r\n          if (option[self.valueAttribute] == options[x][self.valueAttribute]) {\r\n            return x;\r\n          }\r\n        }\r\n        return -1;\r\n      }\r\n      var index = findIndex(option, self.selectedOptions);\r\n      self.selectedOptions.splice(index, 1);\r\n      self.$forceUpdate();\r\n      if (typeof closeDropdown === "undefined" || closeDropdown) {\r\n        self.closeDropdown();\r\n      }\r\n      self.$emit("input", self.selectedOptions);\r\n      window.requestAnimationFrame(self.setSelectBoxWidth);\r\n      self.setCalculatedPadding();\r\n    },\r\n    closeDropdown() {\r\n      var self = this;\r\n      self.hoveredIndex = -1;\r\n      self.timeout = setTimeout(function() {\r\n        self.showOptions = false;\r\n      }, 200);\r\n    },\r\n    openDropdown() {\r\n      var self = this;\r\n      self.$emit("focus");\r\n      clearTimeout(self.timeout);\r\n      if (self.disabled) {\r\n        return false;\r\n      }\r\n      self.hoveredIndex = -1;\r\n      self.setCalculatedWidth();\r\n      self.showSelected = false;\r\n      self.showOptions = true;\r\n    },\r\n    setSelectBoxWidth() {\r\n      var self = this;\r\n      if (self.$refs.selectBox)\r\n        self.selectBoxWidth = self.$refs.selectBox.clientWidth + 5;\r\n      window.requestAnimationFrame(self.setSelectBoxWidth);\r\n    },\r\n    setCalculatedPadding() {\r\n      var self = this;\r\n      if (self.selectBoxWidth > self.computedCutOff) {\r\n        self.calculatedPadding = self.$refs.selectDropdownBox.clientWidth + 10;\r\n      } else {\r\n        self.calculatedPadding = self.selectBoxWidth;\r\n      }\r\n      window.requestAnimationFrame(self.setCalculatedPadding);\r\n    },\r\n    setCalculatedWidth() {\r\n      var self = this;\r\n      setTimeout(function() {\r\n        try {\r\n          self.calculatedHeight = self.$el.firstChild.offsetHeight * -1 + 5;\r\n          if (!self.multiSelect) {\r\n            self.calculatedHeight -= 4;\r\n          }\r\n          self.calculatedWidth = self.$el.firstChild.offsetWidth;\r\n          window.requestAnimationFrame(self.setSelectBoxWidth);\r\n          self.setCalculatedPadding();\r\n        } catch (err) {\r\n          // pass\r\n        }\r\n      }, 50);\r\n    }\r\n  },\r\n  mounted() {\r\n    var self = this;\r\n    if (!self.canBeEmpty) {\r\n      self.selectOption(self.options[0]);\r\n    }\r\n    window.requestAnimationFrame(self.setCalculatedPadding);\r\n    window.addEventListener("resize", self.setCalculatedWidth);\r\n    window.addEventListener("click", self.handleOffClick);\r\n    self.setCalculatedWidth();\r\n    setTimeout(function() {\r\n      self.setCalculatedWidth();\r\n    }, 200);\r\n    for (var x = 0; x < self.initialValues.length; x++) {\r\n      var initVal = self.initialValues[x];\r\n      for (var y = 0; y < self.options.length; y++) {\r\n        if (\r\n          self.options[y][self.valueAttribute] == initVal[self.valueAttribute]\r\n        ) {\r\n          self.selectedOptions.push(Object.assign({}, self.options[y]));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener("resize", self.setCalculatedWidth);\r\n    window.removeEventListener("click", self.handleOffClick);\r\n  }\r\n};\r\nexport default SelectMe;\r\n<\/script>\r\n<style scoped>\r\n.select-me-ignore-me {\r\n  pointer-events: none;\r\n}\r\n.selectme-button {\r\n  height: 30px;\r\n  margin-top: -2px;\r\n}\r\n.selectme-single-select-badge {\r\n  margin-top: 1px;\r\n}\r\n.hidden-inline {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n.selectme-badge {\r\n  display: inline-block;\r\n  padding: 0.25em 0.4em;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  vertical-align: baseline;\r\n  border-radius: 0.25rem;\r\n  font-weight: 700 !important;\r\n  font-size: 16px !important;\r\n  font-family: "Segoe UI" !important;\r\n}\r\n.selectme-container {\r\n  height: 45px;\r\n}\r\n.selectme-container * {\r\n  font-family: "Roboto", sans-serif;\r\n}\r\n\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  border: 0;\r\n}\r\n.selectme-dropdown {\r\n  position: absolute;\r\n  z-index: 2;\r\n  background-color: white;\r\n  padding: 5px;\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 0 0 5px 5px;\r\n  box-shadow: 0px 4px 7px -3px #dadada;\r\n  min-width: 200px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n.selectme-badge-single-span {\r\n  float: left;\r\n  padding-right: 8px;\r\n}\r\n.selectme-badge-transparent {\r\n  color: black;\r\n  font-size: 16px !important;\r\n  background-color: transparent !important;\r\n}\r\n.selectme-selected {\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n}\r\n.selectme-selected > button {\r\n  cursor: pointer;\r\n  padding: 7px;\r\n  margin-right: 2px;\r\n}\r\n.selectme-dropdown > ul {\r\n  list-style: none;\r\n  padding-left: 0px;\r\n  margin-left: 0px;\r\n  margin-bottom: 0px;\r\n}\r\n.selectme-dropdown > ul > li {\r\n  padding: 2px 10px 2px 10px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-left: 0px;\r\n  font-size: 16px;\r\n  max-height: 200px;\r\n  margin-bottom: -2px;\r\n  overflow-y: auto;\r\n}\r\n.selectme-dropdown > ul > li.selectme-selected {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n.selectme-dropdown > ul > li.selectme-hovered {\r\n  background-color: #eeeeee;\r\n}\r\n.selectme-dropdown > ul > li.selectme-selected.selectme-hovered {\r\n  background-color: #0069d9;\r\n  color: white;\r\n}\r\n.selectme-dropdown > ul > li:hover {\r\n  background-color: #eeeeee;\r\n}\r\n.selectme-dropdown > ul > li.selectme-selected:hover {\r\n  background-color: #0069d9;\r\n  color: white;\r\n}\r\n</style>\r\n']},media:void 0})}),i,"data-v-844281fc",!1,void 0,!1,(function(e){return(e,t)=>function(e,t){const n=r?t.media||"default":e,i=s[n]||(s[n]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let n=t.source;if(t.map&&(n+="\n/*# sourceURL="+t.map.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",t.media&&i.element.setAttribute("media",t.media),void 0===o&&(o=document.head||document.getElementsByTagName("head")[0]),o.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(n),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,t=document.createTextNode(n),r=i.element.childNodes;r[e]&&i.element.removeChild(r[e]),r.length?i.element.insertBefore(t,r[e]):i.element.appendChild(t)}}}(e,t)}),void 0,void 0);var a=function(e){a.installed||(a.installed=!0,e.component("SelectMe",d))},c={install:a},p=null;"undefined"!=typeof window?p=window.Vue:"undefined"!=typeof global&&(p=global.Vue),p&&p.use(c),d.install=a;export default d;
